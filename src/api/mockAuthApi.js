// mockAuthApi.js - Mock API –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏
// –ü—É—Ç—å: src/api/mockAuthApi.js

// ‚úÖ –¢–ï–°–¢–û–í–´–ï –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ò
const mockUsers = {
  'admin@gkbr.ru': {
    id: 'user_1',
    email: 'admin@gkbr.ru',
    password: 'admin123', // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–æ–µ–∫—Ç–µ –ø–∞—Ä–æ–ª–∏ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —Ö–µ—à–∏—Ä–æ–≤–∞–Ω—ã
    fullName: '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä GKBR',
    firstName: '–ê–¥–º–∏–Ω',
    lastName: '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä',
    role: 'superadmin_s',
    department: 'IT –û—Ç–¥–µ–ª',
    position: '–°–∏—Å—Ç–µ–º–Ω—ã–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä',
    avatar: null,
    phone: '+7 (999) 123-45-67',
    isActive: true,
    lastLoginAt: null,
    createdAt: '2025-01-10T08:00:00Z',
    permissions: [
      'view_all_modules',
      'edit_content',
      'manage_users',
      'view_analytics',
      'export_data'
    ]
  },
  
  'student@gkbr.ru': {
    id: 'user_2',
    email: 'student@gkbr.ru',
    password: 'student123',
    fullName: '–°—Ç—É–¥–µ–Ω—Ç –ò–≤–∞–Ω–æ–≤',
    firstName: '–ò–≤–∞–Ω',
    lastName: '–ò–≤–∞–Ω–æ–≤',
    role: 'student',
    department: '–°—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω—ã–π –æ—Ç–¥–µ–ª',
    position: '–°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç',
    avatar: null,
    phone: '+7 (999) 987-65-43',
    isActive: true,
    lastLoginAt: null,
    createdAt: '2025-01-15T10:30:00Z',
    permissions: [
      'view_modules',
      'take_quizzes',
      'view_progress'
    ]
  },
  
  'manager@gkbr.ru': {
    id: 'user_3',
    email: 'manager@gkbr.ru',
    password: 'manager123',
    fullName: '–ú–µ–Ω–µ–¥–∂–µ—Ä –ü–µ—Ç—Ä–æ–≤',
    firstName: '–ü–µ—Ç—Ä',
    lastName: '–ü–µ—Ç—Ä–æ–≤',
    role: 'manager',
    department: '–û—Ç–¥–µ–ª –∫–∞—á–µ—Å—Ç–≤–∞',
    position: '–†—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—å –ø—Ä–æ–µ–∫—Ç–æ–≤',
    avatar: null,
    phone: '+7 (999) 555-33-22',
    isActive: true,
    lastLoginAt: null,
    createdAt: '2025-01-12T14:00:00Z',
    permissions: [
      'view_modules',
      'take_quizzes',
      'view_progress',
      'view_team_analytics'
    ]
  }
}

// ‚úÖ –†–û–õ–ò –ò –ü–†–ê–í–ê –î–û–°–¢–£–ü–ê
const rolePermissions = {
  'superadmin_s': {
    name: '–°—É–ø–µ—Ä-–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä',
    permissions: [
      'all', // –ü–æ–ª–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫–æ –≤—Å–µ–º—É
      'view_all_modules',
      'edit_content',
      'manage_users',
      'view_analytics',
      'export_data',
      'system_settings'
    ],
    level: 100
  },
  
  'admin': {
    name: '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä',
    permissions: [
      'view_all_modules',
      'edit_content',
      'manage_users',
      'view_analytics',
      'export_data'
    ],
    level: 80
  },
  
  'manager': {
    name: '–ú–µ–Ω–µ–¥–∂–µ—Ä',
    permissions: [
      'view_modules',
      'take_quizzes',
      'view_progress',
      'view_team_analytics',
      'manage_team'
    ],
    level: 60
  },
  
  'student': {
    name: '–°—Ç—É–¥–µ–Ω—Ç',
    permissions: [
      'view_modules',
      'take_quizzes',
      'view_progress'
    ],
    level: 20
  },
  
  'guest': {
    name: '–ì–æ—Å—Ç—å',
    permissions: [
      'view_public_content'
    ],
    level: 0
  }
}

// ‚úÖ –¢–ï–ö–£–©–ò–ô –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–¨ (—Å–æ—Å—Ç–æ—è–Ω–∏–µ)
let currentUser = null

// ‚úÖ AUTH API
export const authApi = {
  
  // –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  login: async (email, password) => {
    return new Promise((resolve, reject) => {
      setTimeout(() => {
        try {
          const user = mockUsers[email.toLowerCase()]
          
          if (!user) {
            reject(new Error('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —Ç–∞–∫–∏–º email –Ω–µ –Ω–∞–π–¥–µ–Ω'))
            return
          }
          
          if (user.password !== password) {
            reject(new Error('–ù–µ–≤–µ—Ä–Ω—ã–π –ø–∞—Ä–æ–ª—å'))
            return
          }
          
          if (!user.isActive) {
            reject(new Error('–ê–∫–∫–∞—É–Ω—Ç –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É'))
            return
          }
          
          // –û–±–Ω–æ–≤–ª—è–µ–º –≤—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –≤—Ö–æ–¥–∞
          user.lastLoginAt = new Date().toISOString()
          
          // –°–æ–∑–¥–∞–µ–º –±–µ–∑–æ–ø–∞—Å–Ω—É—é –∫–æ–ø–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–±–µ–∑ –ø–∞—Ä–æ–ª—è)
          const safeUser = {
            ...user,
            password: undefined, // –£–±–∏—Ä–∞–µ–º –ø–∞—Ä–æ–ª—å –∏–∑ –æ—Ç–≤–µ—Ç–∞
            isLoggedIn: true,
            loginAt: new Date().toISOString()
          }
          
          // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ localStorage
          localStorage.setItem('gkbr_user_data', JSON.stringify(safeUser))
          
          currentUser = safeUser
          
          console.log(`‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${email} —É—Å–ø–µ—à–Ω–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω`)
          resolve(safeUser)
          
        } catch (error) {
          console.error('–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏:', error)
          reject(new Error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—Ö–æ–¥–µ –≤ —Å–∏—Å—Ç–µ–º—É'))
        }
      }, 800) // –ò–º–∏—Ç–∞—Ü–∏—è —Å–µ—Ç–µ–≤–æ–π –∑–∞–¥–µ—Ä–∂–∫–∏
    })
  },
  
  // –í—ã—Ö–æ–¥ –∏–∑ —Å–∏—Å—Ç–µ–º—ã
  logout: async () => {
    return new Promise((resolve) => {
      setTimeout(() => {
        currentUser = null
        localStorage.removeItem('gkbr_user_data')
        localStorage.removeItem('gkbr_user_progress')
        console.log('üëã –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã—à–µ–ª –∏–∑ —Å–∏—Å—Ç–µ–º—ã')
        resolve(true)
      }, 200)
    })
  },
  
  // –ü–æ–ª—É—á–∏—Ç—å —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  fetchCurrentUser: async () => {
    return new Promise((resolve, reject) => {
      setTimeout(() => {
        try {
          // –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä—è–µ–º –ø–∞–º—è—Ç—å
          if (currentUser) {
            resolve(currentUser)
            return
          }
          
          // –ó–∞—Ç–µ–º –ø—Ä–æ–≤–µ—Ä—è–µ–º localStorage
          const savedUser = localStorage.getItem('gkbr_user_data')
          if (savedUser) {
            try {
              const user = JSON.parse(savedUser)
              if (user?.isLoggedIn) {
                currentUser = user
                console.log(`‚úÖ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ —Å–µ—Å—Å–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${user.email}`)
                resolve(user)
                return
              }
            } catch (parseError) {
              console.error('–û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', parseError)
              localStorage.removeItem('gkbr_user_data')
            }
          }
          
          // –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω
          reject(new Error('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω'))
          
        } catch (error) {
          console.error('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', error)
          reject(error)
        }
      }, 300)
    })
  },
  
  // –û–±–Ω–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  updateUser: async (userData) => {
    return new Promise((resolve, reject) => {
      setTimeout(() => {
        try {
          if (!currentUser || !userData.id) {
            reject(new Error('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω –∏–ª–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç ID'))
            return
          }
          
          // –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ mockUsers
          const existingUser = Object.values(mockUsers).find(u => u.id === userData.id)
          if (existingUser) {
            Object.assign(existingUser, {
              fullName: userData.fullName || existingUser.fullName,
              firstName: userData.firstName || existingUser.firstName,
              lastName: userData.lastName || existingUser.lastName,
              department: userData.department || existingUser.department,
              position: userData.position || existingUser.position,
              phone: userData.phone || existingUser.phone,
              avatar: userData.avatar || existingUser.avatar
            })
          }
          
          // –û–±–Ω–æ–≤–ª—è–µ–º —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
          const updatedUser = {
            ...currentUser,
            ...userData,
            password: undefined // –ù–µ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –ø–∞—Ä–æ–ª—å
          }
          
          currentUser = updatedUser
          
          // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ localStorage
          localStorage.setItem('gkbr_user_data', JSON.stringify(updatedUser))
          
          console.log(`‚úÖ –î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userData.email} –æ–±–Ω–æ–≤–ª–µ–Ω—ã`)
          resolve(updatedUser)
          
        } catch (error) {
          console.error('–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', error)
          reject(new Error('–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è'))
        }
      }, 500)
    })
  },
  
  // –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞
  checkPermission: (permission) => {
    if (!currentUser || !currentUser.role) {
      return false
    }
    
    const userRole = rolePermissions[currentUser.role]
    if (!userRole) {
      return false
    }
    
    // –°—É–ø–µ—Ä-–∞–¥–º–∏–Ω –∏–º–µ–µ—Ç –¥–æ—Å—Ç—É–ø –∫–æ –≤—Å–µ–º—É
    if (userRole.permissions.includes('all')) {
      return true
    }
    
    return userRole.permissions.includes(permission)
  },
  
  // –ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ä–æ–ª–∏
  getRoleInfo: (role = null) => {
    const targetRole = role || currentUser?.role
    return rolePermissions[targetRole] || rolePermissions.guest
  }
}

// ‚úÖ –≠–ö–°–ü–û–†–¢ –ü–û –£–ú–û–õ–ß–ê–ù–ò–Æ
export default authApi