// Dashboard.jsx - –ì–ª–∞–≤–Ω–∞—è –ø–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å –º–æ–¥—É–ª—è–º–∏
// –ü—É—Ç—å: src/platform/Dashboard.jsx

import React, { useState, useEffect } from 'react'
import { useNavigate } from 'react-router-dom'
import contentApi from '../api/mockContentApi.js'
import progressApi from '../api/mockProgressApi.js'

const Dashboard = ({ userData, userProgress, onLogout, onUpdateProgress }) => {
  const navigate = useNavigate()
  const [availableModules, setAvailableModules] = useState([])
  const [isLoading, setIsLoading] = useState(true)
  const [stats, setStats] = useState({
    completedModules: 0,
    totalScore: 0,
    level: 1,
    badges: 0
  })

  useEffect(() => {
    loadDashboardData()
  }, [userData])

  const loadDashboardData = async () => {
    try {
      setIsLoading(true)
      
      // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –º–æ–¥—É–ª–∏
      const modules = await contentApi.fetchAvailableModules()
      setAvailableModules(modules)
      
      // –ó–∞–≥—Ä—É–∂–∞–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      if (userData?.id) {
        const progress = await progressApi.fetchUserProgress(userData.id)
        setStats({
          completedModules: progress.completedModules?.length || 0,
          totalScore: progress.totalScore || 0,
          level: progress.level || 1,
          badges: progress.badges?.length || 0
        })
      }
      
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –ø–∞–Ω–µ–ª–∏:', error)
    } finally {
      setIsLoading(false)
    }
  }

  const handleModuleClick = (moduleId) => {
    navigate(`/module/${moduleId}`)
  }

  const handleQuizClick = (moduleId) => {
    navigate(`/quiz/${moduleId}`)
  }

  const getModuleProgress = (moduleId) => {
    return userProgress?.moduleProgress?.[moduleId]?.percentage || 0
  }

  const isModuleCompleted = (moduleId) => {
    return userProgress?.completedModules?.includes(moduleId) || false
  }

  const getGreeting = () => {
    const hour = new Date().getHours()
    if (hour < 12) return '–î–æ–±—Ä–æ–µ —É—Ç—Ä–æ'
    if (hour < 18) return '–î–æ–±—Ä—ã–π –¥–µ–Ω—å'
    return '–î–æ–±—Ä—ã–π –≤–µ—á–µ—Ä'
  }

  if (isLoading) {
    return (
      <div className="min-h-screen bg-gradient-to-br from-slate-900 to-blue-900 flex items-center justify-center">
        <div className="text-center">
          <div className="text-6xl mb-4 animate-bounce">üèóÔ∏è</div>
          <h2 className="text-2xl font-bold text-white mb-2">–ó–∞–≥—Ä—É–∑–∫–∞ –ø–∞–Ω–µ–ª–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è...</h2>
          <div className="mt-6">
            <div className="w-48 h-2 bg-white/20 rounded-full mx-auto">
              <div className="h-2 bg-gradient-to-r from-blue-500 to-purple-500 rounded-full animate-pulse w-2/3"></div>
            </div>
          </div>
        </div>
      </div>
    )
  }

  return (
    <div className="min-h-screen bg-gradient-to-br from-slate-900 to-blue-900">
      
      {/* –•–µ–¥–µ—Ä */}
      <header className="bg-white/10 backdrop-blur-lg border-b border-white/20 sticky top-0 z-50">
        <div className="max-w-7xl mx-auto px-4 py-4">
          <div className="flex items-center justify-between">
            
            {/* –õ–æ–≥–æ—Ç–∏–ø –∏ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ */}
            <div className="flex items-center space-x-4">
              <div className="text-2xl font-bold text-white">
                üèóÔ∏è –ì–ö –ë–ò–ó–ù–ï–° –†–ï–®–ï–ù–ò–ï
              </div>
              <div className="hidden md:block">
                <p className="text-blue-200">
                  {getGreeting()}, {userData?.fullName || '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'}!
                </p>
              </div>
            </div>

            {/* –î–µ–π—Å—Ç–≤–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è */}
            <div className="flex items-center space-x-4">
              <div className="hidden md:flex items-center space-x-6 text-sm">
                <div className="text-center">
                  <div className="text-white font-bold">{stats.totalScore}</div>
                  <div className="text-blue-200">–±–∞–ª–ª–æ–≤</div>
                </div>
                <div className="text-center">
                  <div className="text-white font-bold">–£—Ä. {stats.level}</div>
                  <div className="text-blue-200">—É—Ä–æ–≤–µ–Ω—å</div>
                </div>
                <div className="text-center">
                  <div className="text-white font-bold">{stats.badges}</div>
                  <div className="text-blue-200">–∑–Ω–∞—á–∫–æ–≤</div>
                </div>
              </div>
              
              <button
                onClick={onLogout}
                className="bg-red-600 hover:bg-red-700 text-white px-4 py-2 rounded-lg text-sm transition-colors"
              >
                –í—ã—Ö–æ–¥
              </button>
            </div>
          </div>
        </div>
      </header>

      {/* –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç */}
      <main className="max-w-7xl mx-auto px-4 py-8">
        
        {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è */}
        <section className="mb-12">
          <div className="grid grid-cols-1 md:grid-cols-4 gap-6">
            
            <div className="bg-white/10 backdrop-blur-lg rounded-2xl p-6 border border-white/20 text-center">
              <div className="text-3xl mb-2">üìö</div>
              <div className="text-2xl font-bold text-white">{stats.completedModules}</div>
              <div className="text-blue-200 text-sm">–ú–æ–¥—É–ª–µ–π –∑–∞–≤–µ—Ä—à–µ–Ω–æ</div>
            </div>
            
            <div className="bg-white/10 backdrop-blur-lg rounded-2xl p-6 border border-white/20 text-center">
              <div className="text-3xl mb-2">üéØ</div>
              <div className="text-2xl font-bold text-yellow-400">{stats.totalScore}</div>
              <div className="text-blue-200 text-sm">–û–±—â–∏–π —Å—á–µ—Ç</div>
            </div>
            
            <div className="bg-white/10 backdrop-blur-lg rounded-2xl p-6 border border-white/20 text-center">
              <div className="text-3xl mb-2">‚≠ê</div>
              <div className="text-2xl font-bold text-purple-400">–£—Ä. {stats.level}</div>
              <div className="text-blue-200 text-sm">–¢–µ–∫—É—â–∏–π —É—Ä–æ–≤–µ–Ω—å</div>
            </div>
            
            <div className="bg-white/10 backdrop-blur-lg rounded-2xl p-6 border border-white/20 text-center">
              <div className="text-3xl mb-2">üèÜ</div>
              <div className="text-2xl font-bold text-orange-400">{stats.badges}</div>
              <div className="text-blue-200 text-sm">–î–æ—Å—Ç–∏–∂–µ–Ω–∏–π</div>
            </div>
          </div>
        </section>

        {/* –î–æ—Å—Ç—É–ø–Ω—ã–µ –º–æ–¥—É–ª–∏ */}
        <section>
          <div className="flex items-center justify-between mb-8">
            <h2 className="text-3xl font-bold text-white">–ú–æ–¥—É–ª–∏ –æ–±—É—á–µ–Ω–∏—è</h2>
            <div className="text-blue-200 text-sm">
              {availableModules.length} –º–æ–¥—É–ª–µ–π –¥–æ—Å—Ç—É–ø–Ω–æ
            </div>
          </div>

          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
            {availableModules.map((module) => {
              const progress = getModuleProgress(module.id)
              const completed = isModuleCompleted(module.id)
              
              return (
                <div
                  key={module.id}
                  className="bg-white/10 backdrop-blur-lg rounded-2xl p-6 border border-white/20 hover:bg-white/15 transition-all duration-300 transform hover:scale-105"
                >
                  
                  {/* –•–µ–¥–µ—Ä –º–æ–¥—É–ª—è */}
                  <div className="flex items-center justify-between mb-4">
                    <div className="text-3xl">
                      {module.id === 1 ? 'üìã' : module.id === 2 ? 'üë•' : '‚úÖ'}
                    </div>
                    {completed && (
                      <div className="bg-green-500 text-white text-xs px-2 py-1 rounded-full">
                        –ó–∞–≤–µ—Ä—à–µ–Ω
                      </div>
                    )}
                  </div>

                  {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –º–æ–¥—É–ª–µ */}
                  <h3 className="text-xl font-bold text-white mb-3">
                    {module.title}
                  </h3>
                  
                  <p className="text-blue-200 text-sm mb-4 line-clamp-2">
                    {module.description}
                  </p>

                  {/* –ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ */}
                  <div className="flex items-center justify-between text-xs text-blue-300 mb-4">
                    <span className="bg-blue-500/20 px-2 py-1 rounded-full">
                      {module.difficulty}
                    </span>
                    <span>‚è±Ô∏è {module.estimatedTime}</span>
                  </div>

                  {/* –ü—Ä–æ–≥—Ä–µ—Å—Å */}
                  {progress > 0 && (
                    <div className="mb-4">
                      <div className="flex items-center justify-between text-sm text-blue-200 mb-2">
                        <span>–ü—Ä–æ–≥—Ä–µ—Å—Å</span>
                        <span>{progress}%</span>
                      </div>
                      <div className="w-full bg-white/20 rounded-full h-2">
                        <div 
                          className="bg-gradient-to-r from-green-500 to-blue-500 h-2 rounded-full transition-all duration-300"
                          style={{ width: `${progress}%` }}
                        ></div>
                      </div>
                    </div>
                  )}

                  {/* –î–µ–π—Å—Ç–≤–∏—è */}
                  <div className="space-y-2">
                    <button
                      onClick={() => handleModuleClick(module.id)}
                      className="w-full bg-blue-600 hover:bg-blue-700 text-white font-bold py-3 px-4 rounded-lg transition-colors"
                    >
                      {progress > 0 ? '–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å' : '–ù–∞—á–∞—Ç—å –∏–∑—É—á–µ–Ω–∏–µ'}
                    </button>
                    
                    <button
                      onClick={() => handleQuizClick(module.id)}
                      className="w-full bg-purple-600 hover:bg-purple-700 text-white font-bold py-2 px-4 rounded-lg transition-colors"
                    >
                      üß† –ü—Ä–æ–π—Ç–∏ —Ç–µ—Å—Ç
                    </button>
                  </div>
                </div>
              )
            })}
          </div>
        </section>

        {/* –ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è */}
        <section className="mt-12">
          <div className="bg-white/10 backdrop-blur-lg rounded-2xl p-6 border border-white/20">
            <h3 className="text-xl font-bold text-white mb-4">–ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è</h3>
            
            <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
              <button
                onClick={() => navigate('/module/1')}
                className="bg-gradient-to-r from-blue-600 to-purple-600 hover:from-blue-700 hover:to-purple-700 text-white font-semibold py-3 px-4 rounded-lg transition-all transform hover:scale-105"
              >
                üìã –ò–∑—É—á–∏—Ç—å –°–†–û
              </button>
              
              <button
                onClick={() => navigate('/quiz/1')}
                className="bg-gradient-to-r from-green-600 to-teal-600 hover:from-green-700 hover:to-teal-700 text-white font-semibold py-3 px-4 rounded-lg transition-all transform hover:scale-105"
              >
                üß† –ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç
              </button>
              
              <button
                onClick={() => window.location.reload()}
                className="bg-gradient-to-r from-gray-600 to-gray-700 hover:from-gray-700 hover:to-gray-800 text-white font-semibold py-3 px-4 rounded-lg transition-all transform hover:scale-105"
              >
                üîÑ –û–±–Ω–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ
              </button>
            </div>
          </div>
        </section>

        {/* –§—É—Ç–µ—Ä —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π */}
        <footer className="mt-12 text-center text-blue-300 text-sm">
          <p>
            –ì–ö –ë–ò–ó–ù–ï–° –†–ï–®–ï–ù–ò–ï ¬© 2025 ‚Ä¢ –ü–ª–∞—Ç—Ñ–æ—Ä–º–∞ –æ–±—É—á–µ–Ω–∏—è –∏ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
          </p>
          <p className="mt-2">
            –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {userData?.fullName} ‚Ä¢ –†–æ–ª—å: {userData?.role} ‚Ä¢ 
            –ü–æ—Å–ª–µ–¥–Ω–∏–π –≤—Ö–æ–¥: {new Date().toLocaleString()}
          </p>
        </footer>
      </main>
    </div>
  )
}

export default Dashboard