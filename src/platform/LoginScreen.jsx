// LoginScreen.jsx - –í—Ö–æ–¥ –∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è
// –ü—É—Ç—å: src/platform/LoginScreen.jsx

import React, { useState } from 'react'

const LoginScreen = ({ onLogin }) => {
  // ‚úÖ –°–û–°–¢–û–Ø–ù–ò–ï –ö–û–ú–ü–û–ù–ï–ù–¢–ê
  const [isLogin, setIsLogin] = useState(true) // true = –≤—Ö–æ–¥, false = —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è
  const [formData, setFormData] = useState({
    email: '',
    password: '',
    fullName: '',
    confirmPassword: ''
  })
  const [isLoading, setIsLoading] = useState(false)
  const [errors, setErrors] = useState({})

  // ‚úÖ –¢–ï–°–¢–û–í–´–ï –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ò
  const testUsers = [
    {
      id: 'user_1',
      email: 'admin@gkbr.ru',
      password: 'admin123',
      fullName: '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä GKBR',
      role: 'superadmin_s'
    },
    {
      id: 'user_2',
      email: 'student@gkbr.ru',
      password: 'student123',
      fullName: '–°—Ç—É–¥–µ–Ω—Ç –ò–≤–∞–Ω–æ–≤',
      role: 'student'
    }
  ]

  // ‚úÖ –û–ë–†–ê–ë–û–¢–ö–ê –í–í–û–î–ê
  const handleInputChange = (e) => {
    const { name, value } = e.target
    setFormData(prev => ({
      ...prev,
      [name]: value
    }))
    
    // –û—á–∏—Å—Ç–∫–∞ –æ—à–∏–±–æ–∫ –ø—Ä–∏ –≤–≤–æ–¥–µ
    if (errors[name]) {
      setErrors(prev => ({
        ...prev,
        [name]: ''
      }))
    }
  }

  // ‚úÖ –í–ê–õ–ò–î–ê–¶–ò–Ø –§–û–†–ú–´
  const validateForm = () => {
    const newErrors = {}

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ email
    if (!formData.email) {
      newErrors.email = 'Email –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω'
    } else if (!/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(formData.email)) {
      newErrors.email = '–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç email'
    }

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–∞—Ä–æ–ª—è
    if (!formData.password) {
      newErrors.password = '–ü–∞—Ä–æ–ª—å –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω'
    } else if (formData.password.length < 6) {
      newErrors.password = '–ü–∞—Ä–æ–ª—å –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –º–∏–Ω–∏–º—É–º 6 —Å–∏–º–≤–æ–ª–æ–≤'
    }

    // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –≤–∞–ª–∏–¥–∞—Ü–∏—è –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
    if (!isLogin) {
      if (!formData.fullName) {
        newErrors.fullName = '–ò–º—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ'
      }
      
      if (!formData.confirmPassword) {
        newErrors.confirmPassword = '–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–∞—Ä–æ–ª—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ'
      } else if (formData.password !== formData.confirmPassword) {
        newErrors.confirmPassword = '–ü–∞—Ä–æ–ª–∏ –Ω–µ —Å–æ–≤–ø–∞–¥–∞—é—Ç'
      }
    }

    setErrors(newErrors)
    return Object.keys(newErrors).length === 0
  }

  // ‚úÖ –í–•–û–î –í –°–ò–°–¢–ï–ú–£
  const handleLogin = async () => {
    if (!validateForm()) return

    setIsLoading(true)
    
    try {
      // –ü–æ–∏—Å–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Ç–µ—Å—Ç–æ–≤–æ–π –±–∞–∑–µ
      const user = testUsers.find(u => 
        u.email === formData.email && u.password === formData.password
      )

      if (user) {
        // –£—Å–ø–µ—à–Ω—ã–π –≤—Ö–æ–¥
        const userData = {
          ...user,
          isLoggedIn: true,
          loginTime: new Date().toISOString()
        }
        
        localStorage.setItem('gkbr_user_data', JSON.stringify(userData))
        onLogin(userData)
      } else {
        setErrors({ submit: '–ù–µ–≤–µ—Ä–Ω—ã–π email –∏–ª–∏ –ø–∞—Ä–æ–ª—å' })
      }
    } catch (error) {
      setErrors({ submit: '–û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞ –≤ —Å–∏—Å—Ç–µ–º—É' })
    } finally {
      setIsLoading(false)
    }
  }

  // ‚úÖ –†–ï–ì–ò–°–¢–†–ê–¶–ò–Ø
  const handleRegister = async () => {
    if (!validateForm()) return

    setIsLoading(true)
    
    try {
      // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      const existingUser = testUsers.find(u => u.email === formData.email)
      if (existingUser) {
        setErrors({ submit: '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —Ç–∞–∫–∏–º email —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç' })
        setIsLoading(false)
        return
      }

      // –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      const newUser = {
        id: `user_${Date.now()}`,
        email: formData.email,
        password: formData.password,
        fullName: formData.fullName,
        role: 'student',
        isLoggedIn: true,
        registrationTime: new Date().toISOString(),
        loginTime: new Date().toISOString()
      }

      // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ –ª–æ–∫–∞–ª—å–Ω–æ–π –±–∞–∑–µ (–≤ —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ - –æ—Ç–ø—Ä–∞–≤–∫–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä)
      const savedUsers = JSON.parse(localStorage.getItem('gkbr_users') || '[]')
      savedUsers.push(newUser)
      localStorage.setItem('gkbr_users', JSON.stringify(savedUsers))
      
      localStorage.setItem('gkbr_user_data', JSON.stringify(newUser))
      onLogin(newUser)
    } catch (error) {
      setErrors({ submit: '–û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏' })
    } finally {
      setIsLoading(false)
    }
  }

  // ‚úÖ –û–¢–ü–†–ê–í–ö–ê –§–û–†–ú–´
  const handleSubmit = (e) => {
    e.preventDefault()
    if (isLogin) {
      handleLogin()
    } else {
      handleRegister()
    }
  }

  // ‚úÖ –ü–ï–†–ï–ö–õ–Æ–ß–ï–ù–ò–ï –†–ï–ñ–ò–ú–ê
  const toggleMode = () => {
    setIsLogin(!isLogin)
    setFormData({
      email: '',
      password: '',
      fullName: '',
      confirmPassword: ''
    })
    setErrors({})
  }

  // ‚úÖ –ë–´–°–¢–†–´–ô –í–•–û–î –î–õ–Ø –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø
  const quickLogin = (userType) => {
    const user = userType === 'admin' ? testUsers[0] : testUsers[1]
    setFormData({
      email: user.email,
      password: user.password,
      fullName: '',
      confirmPassword: ''
    })
  }

  return (
    <div className="min-h-screen bg-gradient-to-br from-slate-900 via-blue-900 to-indigo-900 flex items-center justify-center p-4">
      <div className="w-full max-w-md">
        
        {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
        <div className="text-center mb-8">
          <div className="text-6xl mb-4">üèóÔ∏è</div>
          <h1 className="text-4xl font-bold text-white mb-2">GKBR Platform</h1>
          <p className="text-blue-200">
            {isLogin ? '–í–æ–π–¥–∏—Ç–µ –≤ —Å–∏—Å—Ç–µ–º—É –æ–±—É—á–µ–Ω–∏—è' : '–°–æ–∑–¥–∞–π—Ç–µ —É—á–µ—Ç–Ω—É—é –∑–∞–ø–∏—Å—å'}
          </p>
        </div>

        {/* –§–æ—Ä–º–∞ */}
        <div className="bg-white/10 backdrop-blur-lg rounded-2xl p-8 border border-white/20">
          <form onSubmit={handleSubmit} className="space-y-6">
            
            {/* –ü–æ–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ */}
            {!isLogin && (
              <div>
                <label className="block text-white text-sm font-medium mb-2">
                  –ü–æ–ª–Ω–æ–µ –∏–º—è
                </label>
                <input
                  type="text"
                  name="fullName"
                  value={formData.fullName}
                  onChange={handleInputChange}
                  className="w-full px-4 py-3 bg-white/10 border border-white/20 rounded-lg text-white placeholder-gray-400 focus:outline-none focus:border-blue-500 focus:ring-1 focus:ring-blue-500"
                  placeholder="–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è"
                />
                {errors.fullName && (
                  <p className="mt-1 text-red-400 text-sm">{errors.fullName}</p>
                )}
              </div>
            )}

            {/* Email */}
            <div>
              <label className="block text-white text-sm font-medium mb-2">
                Email
              </label>
              <input
                type="email"
                name="email"
                value={formData.email}
                onChange={handleInputChange}
                className="w-full px-4 py-3 bg-white/10 border border-white/20 rounded-lg text-white placeholder-gray-400 focus:outline-none focus:border-blue-500 focus:ring-1 focus:ring-blue-500"
                placeholder="example@company.com"
              />
              {errors.email && (
                <p className="mt-1 text-red-400 text-sm">{errors.email}</p>
              )}
            </div>

            {/* –ü–∞—Ä–æ–ª—å */}
            <div>
              <label className="block text-white text-sm font-medium mb-2">
                –ü–∞—Ä–æ–ª—å
              </label>
              <input
                type="password"
                name="password"
                value={formData.password}
                onChange={handleInputChange}
                className="w-full px-4 py-3 bg-white/10 border border-white/20 rounded-lg text-white placeholder-gray-400 focus:outline-none focus:border-blue-500 focus:ring-1 focus:ring-blue-500"
                placeholder="–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å"
              />
              {errors.password && (
                <p className="mt-1 text-red-400 text-sm">{errors.password}</p>
              )}
            </div>

            {/* –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–∞—Ä–æ–ª—è –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ */}
            {!isLogin && (
              <div>
                <label className="block text-white text-sm font-medium mb-2">
                  –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–∞—Ä–æ–ª—è
                </label>
                <input
                  type="password"
                  name="confirmPassword"
                  value={formData.confirmPassword}
                  onChange={handleInputChange}
                  className="w-full px-4 py-3 bg-white/10 border border-white/20 rounded-lg text-white placeholder-gray-400 focus:outline-none focus:border-blue-500 focus:ring-1 focus:ring-blue-500"
                  placeholder="–ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–∞—Ä–æ–ª—å"
                />
                {errors.confirmPassword && (
                  <p className="mt-1 text-red-400 text-sm">{errors.confirmPassword}</p>
                )}
              </div>
            )}

            {/* –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ */}
            {errors.submit && (
              <div className="bg-red-500/20 border border-red-500/50 rounded-lg p-3">
                <p className="text-red-200 text-sm">{errors.submit}</p>
              </div>
            )}

            {/* –ö–Ω–æ–ø–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ */}
            <button
              type="submit"
              disabled={isLoading}
              className="w-full bg-gradient-to-r from-blue-600 to-purple-600 hover:from-blue-700 hover:to-purple-700 disabled:opacity-50 disabled:cursor-not-allowed text-white font-semibold py-3 px-6 rounded-lg transition-all duration-300 transform hover:scale-105"
            >
              {isLoading ? (
                <div className="flex items-center justify-center">
                  <div className="w-5 h-5 border-2 border-white/20 border-t-white rounded-full animate-spin mr-2"></div>
                  {isLogin ? '–í—Ö–æ–¥...' : '–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è...'}
                </div>
              ) : (
                isLogin ? '–í–æ–π—Ç–∏ –≤ —Å–∏—Å—Ç–µ–º—É' : '–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è'
              )}
            </button>
          </form>

          {/* –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Ä–µ–∂–∏–º–∞ */}
          <div className="mt-6 text-center">
            <button
              onClick={toggleMode}
              className="text-blue-300 hover:text-blue-200 transition-colors"
            >
              {isLogin 
                ? '–ù–µ—Ç –∞–∫–∫–∞—É–Ω—Ç–∞? –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å' 
                : '–£–∂–µ –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç? –í–æ–π–¥–∏—Ç–µ'
              }
            </button>
          </div>

          {/* –ë—ã—Å—Ç—Ä—ã–π –≤—Ö–æ–¥ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è */}
          {isLogin && (
            <div className="mt-6 pt-6 border-t border-white/20">
              <p className="text-white text-sm text-center mb-3">–ë—ã—Å—Ç—Ä—ã–π –≤—Ö–æ–¥ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:</p>
              <div className="grid grid-cols-2 gap-3">
                <button
                  onClick={() => quickLogin('admin')}
                  className="bg-purple-500/20 hover:bg-purple-500/30 text-purple-200 text-sm py-2 px-3 rounded-lg transition-all"
                >
                  üëë –ê–¥–º–∏–Ω
                </button>
                <button
                  onClick={() => quickLogin('student')}
                  className="bg-green-500/20 hover:bg-green-500/30 text-green-200 text-sm py-2 px-3 rounded-lg transition-all"
                >
                  üéì –°—Ç—É–¥–µ–Ω—Ç
                </button>
              </div>
            </div>
          )}
        </div>

        {/* –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
        <div className="mt-6 text-center text-blue-300 text-sm">
          <p>üîí –í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –Ω–∞–¥–µ–∂–Ω–æ –∑–∞—â–∏—â–µ–Ω—ã</p>
          <p className="mt-1">–ü—Ä–µ–º–∏–∞–ª—å–Ω–∞—è –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ –æ–±—É—á–µ–Ω–∏—è GKBR</p>
        </div>
      </div>
    </div>
  )
}

export default LoginScreen