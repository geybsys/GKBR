// sessionValidator.js - –í–∞–ª–∏–¥–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö —Å–µ—Å—Å–∏–π
// –ü—É—Ç—å: src/utils/sessionValidator.js

// üîê –í–ê–õ–ò–î–ê–¢–û–† –°–ï–°–°–ò–ô
export const sessionValidator = {
  // ‚úÖ –í–∞–ª–∏–¥–∞—Ü–∏—è —Å–µ—Å—Å–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  async validate(userData) {
    try {
      // –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–∑–æ–≤—ã—Ö –ø–æ–ª–µ–π
      if (!userData || !userData.id || !userData.sessionId) {
        return false
      }

      // –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—Ä–µ–º–µ–Ω–∏ –∂–∏–∑–Ω–∏ —Å–µ—Å—Å–∏–∏ (24 —á–∞—Å–∞)
      if (userData.loginTime) {
        const loginTime = new Date(userData.loginTime)
        const now = new Date()
        const hoursDiff = (now - loginTime) / (1000 * 60 * 60)
        
        if (hoursDiff > 24) {
          console.log('–°–µ—Å—Å–∏—è –∏—Å—Ç–µ–∫–ª–∞:', hoursDiff, '—á–∞—Å–æ–≤')
          return false
        }
      }

      // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∞ sessionId
      if (!this.isValidSessionId(userData.sessionId)) {
        return false
      }

      // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–æ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      if (!this.isValidRole(userData.role)) {
        return false
      }

      return true
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ —Å–µ—Å—Å–∏–∏:', error)
      return false
    }
  },

  // üÜî –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∞ session ID
  isValidSessionId(sessionId) {
    // –§–æ—Ä–º–∞—Ç: session_timestamp_randomstring
    const sessionPattern = /^session_\d+_[a-z0-9]+$/
    return sessionPattern.test(sessionId)
  },

  // üë§ –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç–∏ —Ä–æ–ª–∏
  isValidRole(role) {
    const validRoles = [
      'user',
      'admin', 
      'superadmin_s',
      'moderator',
      'student',
      'instructor'
    ]
    return validRoles.includes(role)
  },

  // üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ –ø–æ—Å–ª–µ–¥–Ω–µ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
  updateLastActivity(userData) {
    if (userData) {
      userData.lastActivity = new Date().toISOString()
      localStorage.setItem('gkbr_user_data', JSON.stringify(userData))
    }
  },

  // üìä –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å–µ—Å—Å–∏–∏
  getSessionInfo(userData) {
    if (!userData) return null

    const loginTime = new Date(userData.loginTime)
    const now = new Date()
    const sessionDuration = now - loginTime
    const hoursActive = Math.floor(sessionDuration / (1000 * 60 * 60))
    const minutesActive = Math.floor((sessionDuration % (1000 * 60 * 60)) / (1000 * 60))

    return {
      isValid: this.validate(userData),
      sessionId: userData.sessionId,
      loginTime: userData.loginTime,
      lastActivity: userData.lastActivity,
      hoursActive,
      minutesActive,
      role: userData.role,
      userId: userData.id
    }
  },

  // üßπ –û—á–∏—Å—Ç–∫–∞ –∏—Å—Ç–µ–∫—à–∏—Ö —Å–µ—Å—Å–∏–π
  clearExpiredSessions() {
    try {
      const userData = localStorage.getItem('gkbr_user_data')
      if (userData) {
        const parsed = JSON.parse(userData)
        if (!this.validate(parsed)) {
          localStorage.removeItem('gkbr_user_data')
          localStorage.removeItem('gkbr_user_progress')
          localStorage.removeItem('gkbr_theme')
          console.log('–û—á–∏—â–µ–Ω—ã –∏—Å—Ç–µ–∫—à–∏–µ –¥–∞–Ω–Ω—ã–µ —Å–µ—Å—Å–∏–∏')
          return true
        }
      }
      return false
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏ —Å–µ—Å—Å–∏–π:', error)
      return false
    }
  },

  // üîí –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π —Å–µ—Å—Å–∏–∏
  createSession(userCredentials) {
    const sessionId = `session_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`
    const sessionData = {
      id: userCredentials.username || userCredentials.id,
      name: userCredentials.name || userCredentials.username,
      role: userCredentials.role || 'user',
      sessionId: sessionId,
      loginTime: new Date().toISOString(),
      lastActivity: new Date().toISOString()
    }

    return sessionData
  },

  // üö™ –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Å–µ—Å—Å–∏–∏
  destroySession() {
    try {
      localStorage.removeItem('gkbr_user_data')
      localStorage.removeItem('gkbr_user_progress')
      // –û—Å—Ç–∞–≤–ª—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ç–µ–º—ã –∏ –∑–≤—É–∫–∞
      console.log('–°–µ—Å—Å–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞')
      return true
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Å–µ—Å—Å–∏–∏:', error)
      return false
    }
  }
}

export default sessionValidator