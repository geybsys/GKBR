// index.js - –§–∏–Ω–∞–ª—å–Ω—ã–π —ç–∫—Å–ø–æ—Ä—Ç –≤—Å–µ—Ö –ø—Ä–µ–º–∏–∞–ª—å–Ω—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ GKBR Platform
// –ü—É—Ç—å: src/components/premium/index.js

// üé® –ë–ê–ó–û–í–´–ï –°–ò–°–¢–ï–ú–´
export { 
  default as PremiumTheme, 
  ThemeProvider, 
  useTheme, 
  PremiumCard, 
  PremiumButton, 
  PremiumInput, 
  ThemeSelector, 
  AnimationToggle,
  PREMIUM_THEMES 
} from './PremiumTheme'

export { 
  default as DesignSystem,
  DesignSystemProvider, 
  useDesignSystem,
  colors,
  typography,
  effects,
  animations,
  breakpoints,
  spacing,
  designTokens,
  DesignSystemPreview
} from './DesignSystem'

export { 
  default as SoundSystem,
  SoundProvider, 
  useSounds, 
  SoundSettings,
  useSoundOnMount,
  useSoundOnChange,
  SoundTrigger 
} from './SoundSystem'

// üéØ –í–ò–ó–£–ê–õ–¨–ù–´–ï –≠–§–§–ï–ö–¢–´
export { 
  default as VisualEffects,
  GlowEffect, 
  GlassEffect, 
  GradientBackground, 
  ShimmerEffect, 
  WaveEffect, 
  ParallaxEffect, 
  ParticleCursor 
} from './VisualEffects'

// üé≠ –ê–ù–ò–ú–ò–†–û–í–ê–ù–ù–´–ï –ö–û–ú–ü–û–ù–ï–ù–¢–´
export { 
  default as AnimatedComponents,
  AnimatedCounter, 
  TypewriterEffect, 
  MagneticElement, 
  PulseElement, 
  ParticleSystem, 
  WaveAnimation, 
  SpinningLoader, 
  AnimatedProgressLine 
} from './AnimatedComponents'

// üéØ –ò–ù–¢–ï–†–ê–ö–¢–ò–í–ù–´–ï –≠–õ–ï–ú–ï–ù–¢–´
export { 
  default as InteractiveElements,
  InteractiveCard, 
  RippleButton, 
  AnimatedModal, 
  AnimatedToggle, 
  AnimatedProgress, 
  FloatingActionButton, 
  AnimatedAvatar 
} from './InteractiveElements'

// üîÑ –°–û–°–¢–û–Ø–ù–ò–Ø –ó–ê–ì–†–£–ó–ö–ò
export { 
  default as LoadingStates,
  GradientSpinner, 
  AnimatedProgressBar, 
  DotsLoader, 
  WaveLoader, 
  PulseLoader, 
  SkeletonLoader, 
  CardSkeleton, 
  LoadingOverlay, 
  StepLoader 
} from './LoadingStates'

// üåå –ê–ù–ò–ú–ò–†–û–í–ê–ù–ù–´–ï –§–û–ù–´
export { 
  default as AnimatedBackground,
  ParticleBackground, 
  WaveBackground, 
  MatrixBackground, 
  NeuralBackground, 
  GeometricBackground, 
  StarBackground, 
  BackgroundSelector 
} from './AnimatedBackground'

// ‚ú® –ú–ò–ö–†–û–ê–ù–ò–ú–ê–¶–ò–ò
export { 
  default as MicroAnimations,
  ScrollReveal,
  HoverEffect,
  StaggeredReveal,
  RippleEffect,
  AnimatedNumber,
  ContentLoader,
  MorphTransition,
  ShakeAnimation,
  AttentionPulse
} from './MicroAnimations'

// üé™ –ì–õ–ê–í–ù–´–ô –ü–†–ï–ú–ò–ê–õ–¨–ù–´–ô UI
export { 
  default as PremiumUI,
  PremiumUIProvider,
  PremiumPage,
  PremiumLoginForm,
  PremiumHeader,
  PremiumFooter,
  PremiumNotification,
  PremiumSettingsButton,
  PremiumSettingsModal,
  NotificationSystem
} from './PremiumUI'

// üéØ –ì–û–¢–û–í–´–ï –ö–û–ú–ë–ò–ù–ê–¶–ò–ò –ò –•–£–ö–ò

// –ö–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ö—É–∫ –¥–ª—è –≤—Å–µ—Ö –ø—Ä–µ–º–∏–∞–ª—å–Ω—ã—Ö —Å–∏—Å—Ç–µ–º
export const usePremiumSystems = () => {
  const theme = useTheme()
  const sounds = useSounds()
  const design = useDesignSystem()
  
  return {
    theme,
    sounds,
    design,
    // –£—Ç–∏–ª–∏—Ç—ã
    playSound: (soundName) => sounds?.[soundName]?.(),
    changeTheme: (themeName) => theme?.changeTheme?.(themeName),
    toggleAnimations: () => design?.toggleReducedMotion?.(),
    // –ö–æ–º–ø–ª–µ–∫—Å–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è
    successFeedback: () => {
      sounds?.success?.()
      // –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –≤–∏–∑—É–∞–ª—å–Ω—É—é –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å
    },
    errorFeedback: () => {
      sounds?.error?.()
      // –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –≤—Å—Ç—Ä—è—Ö–∏–≤–∞–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–∞
    },
    achievementFeedback: () => {
      sounds?.achievement?.()
      // –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –∫–æ–Ω—Ñ–µ—Ç—Ç–∏ –∏–ª–∏ –¥—Ä—É–≥–∏–µ —ç—Ñ—Ñ–µ–∫—Ç—ã
    }
  }
}

// üé® –ì–û–¢–û–í–´–ï –ü–†–ï–ú–ò–ê–õ–¨–ù–´–ï –ö–û–ú–ë–ò–ù–ê–¶–ò–ò

// –ì–æ—Ç–æ–≤–∞—è –∫–∞—Ä—Ç–æ—á–∫–∞ –º–æ–¥—É–ª—è —Å –∞–Ω–∏–º–∞—Ü–∏—è–º–∏
export const PremiumModuleCard = ({ 
  title, 
  description, 
  progress = 0, 
  onClick,
  className = '',
  ...props 
}) => {
  const { sounds } = useSounds()
  
  return (
    <HoverEffect effect="lift" intensity="medium">
      <InteractiveCard
        variant="glass"
        hover="glow"
        onClick={() => {
          sounds?.click()
          onClick?.()
        }}
        className={`p-6 ${className}`}
        {...props}
      >
        <div className="space-y-4">
          <h3 className="text-xl font-bold text-white">{title}</h3>
          <p className="text-blue-200 text-sm">{description}</p>
          
          {progress > 0 && (
            <AnimatedProgress
              value={progress}
              color="blue"
              showValue={true}
              animated={true}
            />
          )}
        </div>
      </InteractiveCard>
    </HoverEffect>
  )
}

// –ì–æ—Ç–æ–≤–∞—è –∫–Ω–æ–ø–∫–∞ —Å –∑–≤—É–∫–æ–º –∏ —ç—Ñ—Ñ–µ–∫—Ç–∞–º–∏
export const PremiumActionButton = ({ 
  children, 
  variant = 'primary',
  soundType = 'click',
  glowEffect = false,
  className = '',
  onClick,
  ...props 
}) => {
  const { sounds } = useSounds()
  
  const handleClick = (e) => {
    sounds?.[soundType]?.()
    onClick?.(e)
  }
  
  const ButtonComponent = (
    <RippleButton
      variant={variant}
      onClick={handleClick}
      className={className}
      {...props}
    >
      {children}
    </RippleButton>
  )
  
  return glowEffect ? (
    <GlowEffect color="blue" intensity="medium" trigger="hover">
      {ButtonComponent}
    </GlowEffect>
  ) : ButtonComponent
}

// –ì–æ—Ç–æ–≤–∞—è —Ñ–æ—Ä–º–∞ –≤—Ö–æ–¥–∞
export const PremiumLoginCard = ({ onSubmit, ...props }) => {
  return (
    <PremiumPage background="particles" showFloatingSettings={true}>
      <div className="min-h-screen flex items-center justify-center p-4">
        <PremiumLoginForm onSubmit={onSubmit} {...props} />
      </div>
    </PremiumPage>
  )
}

// –ì–æ—Ç–æ–≤–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ —Å —Ö–µ–¥–µ—Ä–æ–º –∏ —Ñ—É—Ç–µ—Ä–æ–º
export const PremiumLayoutPage = ({ 
  title,
  subtitle,
  user,
  onLogout,
  children,
  background = 'particles',
  ...props 
}) => {
  return (
    <PremiumPage background={background} {...props}>
      <div className="min-h-screen flex flex-col">
        <PremiumHeader
          title={title}
          subtitle={subtitle}
          user={user}
          onLogout={onLogout}
        />
        
        <main className="flex-1">
          {children}
        </main>
        
        <PremiumFooter />
      </div>
    </PremiumPage>
  )
}

// üõ†Ô∏è –£–¢–ò–õ–ò–¢–´ –î–õ–Ø –†–ê–ó–†–ê–ë–û–¢–ß–ò–ö–û–í

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
export const notify = (type, title, message) => {
  window.dispatchEvent(new CustomEvent('gkbr:notify', {
    detail: { type, title, message }
  }))
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è –∑–≤—É–∫–∞ —Å–æ–±—ã—Ç–∏–π
export const playEventSound = (eventType) => {
  const eventMap = {
    'success': 'gkbr:success',
    'error': 'gkbr:error', 
    'achievement': 'gkbr:achievement',
    'levelup': 'gkbr:levelup',
    'module-complete': 'gkbr:module-complete'
  }
  
  if (eventMap[eventType]) {
    window.dispatchEvent(new Event(eventMap[eventType]))
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∞–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –ø–æ—è–≤–ª–µ–Ω–∏—è
export const createRevealAnimation = (elements, options = {}) => {
  const {
    direction = 'up',
    staggerDelay = 100,
    threshold = 0.1
  } = options
  
  elements.forEach((element, index) => {
    if (element) {
      element.style.opacity = '0'
      element.style.transform = direction === 'up' ? 'translateY(20px)' : 
                               direction === 'down' ? 'translateY(-20px)' :
                               direction === 'left' ? 'translateX(20px)' :
                               'translateX(-20px)'
      
      setTimeout(() => {
        element.style.transition = 'all 0.6s ease-out'
        element.style.opacity = '1'
        element.style.transform = 'translate(0, 0)'
      }, index * staggerDelay)
    }
  })
}

// üìä –ü–†–ï–ú–ò–ê–õ–¨–ù–´–ï –ú–ï–¢–†–ò–ö–ò

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø—Ä–µ–º–∏–∞–ª—å–Ω–æ–≥–æ UI
export const PREMIUM_CONFIG = {
  version: '2.0.0',
  
  themes: {
    count: Object.keys(PREMIUM_THEMES || {}).length,
    default: 'corporate'
  },
  
  animations: {
    reducedMotionSupport: true,
    performance: 'optimized',
    gpuAcceleration: true
  },
  
  sounds: {
    format: 'base64',
    preloaded: true,
    contextualPlayback: true
  },
  
  accessibility: {
    screenReader: true,
    keyboardNavigation: true,
    colorContrast: 'WCAG-AA',
    reducedMotion: true
  },
  
  performance: {
    lazyLoading: true,
    memoryOptimized: true,
    bundleSize: 'optimized'
  }
}

// –¢–∏–ø—ã –¥–ª—è TypeScript (–µ—Å–ª–∏ –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è)
export const PREMIUM_TYPES = {
  variants: ['primary', 'secondary', 'accent', 'ghost', 'danger'],
  sizes: ['small', 'medium', 'large'],
  animations: ['fadeIn', 'slideUp', 'slideDown', 'scaleIn', 'bounce'],
  backgrounds: ['particles', 'waves', 'matrix', 'neural', 'geometric', 'stars'],
  themes: ['corporate', 'ocean', 'sunset', 'forest', 'galaxy', 'midnight']
}

// Debugging —É—Ç–∏–ª–∏—Ç—ã (—Ç–æ–ª—å–∫–æ –¥–ª—è development)
export const PremiumDebug = {
  logComponentTree: () => {
    console.log('üé® Premium UI Component Tree:')
    console.log('‚îú‚îÄ‚îÄ PremiumUIProvider')
    console.log('‚îÇ   ‚îú‚îÄ‚îÄ DesignSystemProvider') 
    console.log('‚îÇ   ‚îú‚îÄ‚îÄ SoundProvider')
    console.log('‚îÇ   ‚îî‚îÄ‚îÄ ThemeProvider')
    console.log('‚îú‚îÄ‚îÄ Visual Effects')
    console.log('‚îú‚îÄ‚îÄ Animated Components')
    console.log('‚îú‚îÄ‚îÄ Interactive Elements')
    console.log('‚îú‚îÄ‚îÄ Loading States')
    console.log('‚îú‚îÄ‚îÄ Animated Backgrounds')
    console.log('‚îî‚îÄ‚îÄ Micro Animations')
  },
  
  validateSetup: () => {
    const checks = {
      theme: !!useTheme,
      sounds: !!useSounds,
      design: !!useDesignSystem
    }
    
    const passed = Object.values(checks).every(Boolean)
    console.log('üîç Premium UI Setup Validation:', passed ? '‚úÖ PASSED' : '‚ùå FAILED')
    console.log(checks)
    
    return passed
  },
  
  showPerformanceMetrics: () => {
    if (performance.mark) {
      performance.mark('premium-ui-check')
      const entries = performance.getEntriesByType('navigation')
      console.log('‚ö° Performance Metrics:', entries[0])
    }
  }
}

// –ì–ª–∞–≤–Ω—ã–π —ç–∫—Å–ø–æ—Ä—Ç –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞
export default {
  // –ü—Ä–æ–≤–∞–π–¥–µ—Ä—ã
  Providers: {
    PremiumUIProvider,
    ThemeProvider,
    SoundProvider,
    DesignSystemProvider
  },
  
  // –ö–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
  Components: {
    VisualEffects,
    AnimatedComponents,
    InteractiveElements,
    LoadingStates,
    AnimatedBackground,
    MicroAnimations
  },
  
  // –•—É–∫–∏
  Hooks: {
    useTheme,
    useSounds,
    useDesignSystem,
    usePremiumSystems
  },
  
  // –£—Ç–∏–ª–∏—Ç—ã
  Utils: { notify, playEventSound, createRevealAnimation },
  Templates: { PremiumModuleCard, PremiumActionButton, PremiumLoginCard, PremiumLayoutPage },
  Combinations: { usePremiumSystems },
  Config: PREMIUM_CONFIG,
  Debug: PremiumDebug
}