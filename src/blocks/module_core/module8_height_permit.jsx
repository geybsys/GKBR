import React, { useState, useEffect, useCallback } from 'react'
import { useNavigate, useParams } from 'react-router-dom'

// ‚úÖ –ü–†–ê–í–ò–õ–¨–ù–´–ï –∏–º–ø–æ—Ä—Ç—ã –ø—Ä–µ–º–∏–∞–ª—å–Ω—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
import { PremiumPage, PremiumCard, RippleButton, AnimatedProgress } from '../../components/premium/PremiumUI.jsx'
import { useSounds } from '../../components/premium/SoundSystem.jsx'

// ‚úÖ UI –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
import ProgressBar from '../../components/ProgressBar.jsx'
import BadgeMeter from '../../components/BadgeMeter.jsx'
import { notify } from '../../components/NotificationPanel.jsx'

// ‚úÖ API
import { contentApi } from '../../api/mockContentApi.js'
import { progressApi } from '../../api/mockProgressApi.js'

const Module8HeightPermit = () => { // ‚úÖ –ü–†–ê–í–ò–õ–¨–ù–û–ï –Ω–∞–∑–≤–∞–Ω–∏–µ –¥–ª—è Height Permit
  const navigate = useNavigate()
  const { moduleId } = useParams()
  const { sounds } = useSounds() // ‚úÖ –ó–≤—É–∫–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω—ã
  
  const [currentSection, setCurrentSection] = useState(0)
  const [completedSections, setCompletedSections] = useState([])
  const [readingTime, setReadingTime] = useState(0)
  const [isReading, setIsReading] = useState(false)
  const [moduleData, setModuleData] = useState(null)
  const [isLoading, setIsLoading] = useState(true)

  // –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –º–æ–¥—É–ª—è –∏–∑ API
  useEffect(() => {
    const fetchModuleContent = async () => {
      setIsLoading(true)
      try {
        const parsedModuleId = parseInt(moduleId) || 8
        if (isNaN(parsedModuleId)) {
          throw new Error('–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π ID –º–æ–¥—É–ª—è.')
        }
        const data = await contentApi.fetchModuleContent(parsedModuleId)
        setModuleData(data)
        
        // –ó–∞–≥—Ä—É–∂–∞–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        const userProgress = await progressApi.fetchUserProgress()
        if (userProgress.completedModules) {
          const moduleProgress = userProgress.moduleProgress?.[parsedModuleId] || {}
          setCompletedSections(moduleProgress.completedSections || [])
        }
        
        sounds.success()
      } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –º–æ–¥—É–ª—è:', error)
        notify.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏', error.message || '–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∫–æ–Ω—Ç–µ–Ω—Ç –º–æ–¥—É–ª—è.')
        sounds.error()
        navigate('/dashboard')
      } finally {
        setIsLoading(false)
      }
    }

    fetchModuleContent()
  }, [moduleId, navigate, sounds])

  // –¢–∞–π–º–µ—Ä —á—Ç–µ–Ω–∏—è
  useEffect(() => {
    if (isReading) {
      const timer = setInterval(() => {
        setReadingTime(prev => prev + 1)
      }, 1000)
      return () => clearInterval(timer)
    }
  }, [isReading])

  useEffect(() => {
    setIsReading(true)
    setReadingTime(0)
    return () => setIsReading(false)
  }, [currentSection])

  const nextSection = useCallback(() => {
    if (!moduleData) return
    if (currentSection < moduleData.sections.length - 1) {
      setCurrentSection(currentSection + 1)
      sounds.success()
    } else {
      completeModule()
    }
  }, [currentSection, moduleData, sounds])

  const prevSection = useCallback(() => {
    if (currentSection > 0) {
      setCurrentSection(currentSection - 1)
      sounds.click()
    }
  }, [currentSection, sounds])

  const completeModule = async () => {
    try {
      await progressApi.updateModuleProgress({
        moduleId: parseInt(moduleId) || 8,
        completedSections: completedSections
      })
      notify.success('–ú–æ–¥—É–ª—å –∑–∞–≤–µ—Ä—à–µ–Ω', '–î–æ–ø—É—Å–∫ –Ω–∞ –≤—ã—Å–æ—Ç—É –∏–∑—É—á–µ–Ω —É—Å–ø–µ—à–Ω–æ!')
      sounds.achievement()
      navigate(`/module/${moduleId}/quiz`)
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –º–æ–¥—É–ª—è:', error)
      notify.error('–û—à–∏–±–∫–∞', error.message || '–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≤–µ—Ä—à–∏—Ç—å –º–æ–¥—É–ª—å.')
      sounds.error()
    }
  }

  const backToDashboard = () => {
    sounds.click()
    navigate('/dashboard')
  }

  const formatTime = (seconds) => {
    const minutes = Math.floor(seconds / 60)
    const remainingSeconds = seconds % 60
    return `${minutes}:${remainingSeconds.toString().padStart(2, '0')}`
  }

  // –ó–∞–≥—Ä—É–∑–æ—á–Ω—ã–π —ç–∫—Ä–∞–Ω
  if (isLoading || !moduleData) {
    return (
      <PremiumPage background="matrix" className="min-h-screen flex items-center justify-center">
        <PremiumCard variant="glow" className="text-center">
          <div className="w-20 h-20 border-4 border-yellow-400 border-t-transparent rounded-full animate-spin mx-auto mb-6"></div>
          <h2 className="text-2xl font-bold text-white mb-2">–ó–∞–≥—Ä—É–∑–∫–∞ –º–æ–¥—É–ª—è...</h2>
          <p className="text-yellow-200">–ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –º–∞—Ç–µ—Ä–∏–∞–ª—ã –ø–æ —Ä–∞–±–æ—Ç–µ –Ω–∞ –≤—ã—Å–æ—Ç–µ</p>
        </PremiumCard>
      </PremiumPage>
    )
  }

  const currentSectionData = moduleData.sections[currentSection]
  const progress = Math.round(((currentSection + 1) / moduleData.sections.length) * 100)

  return (
    <PremiumPage background="particles" className="min-h-screen">
      <div className="max-w-4xl mx-auto px-6 py-12">
        
        {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ –º–æ–¥—É–ª—è */}
        <PremiumCard variant="glow" className="mb-8 text-center">
          <div className="mb-6">
            <h1 className="text-4xl font-bold text-white mb-4">
              üèóÔ∏è –ú–æ–¥—É–ª—å 8: –î–æ–ø—É—Å–∫ –Ω–∞ –≤—ã—Å–æ—Ç—É
            </h1>
            <p className="text-yellow-200 text-lg mb-4">
              –†–∞–±–æ—Ç—ã –Ω–∞ –≤—ã—Å–æ—Ç–µ - —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –∏ –æ–±—É—á–µ–Ω–∏–µ
            </p>
            
            {/* –ü—Ä–æ–≥—Ä–µ—Å—Å */}
            <div className="flex items-center justify-center space-x-4 mb-4">
              <span className="text-sm text-yellow-300">
                –†–∞–∑–¥–µ–ª {currentSection + 1} –∏–∑ {moduleData.sections?.length || 1}
              </span>
              <div className="flex-1 max-w-xs">
                <AnimatedProgress value={progress} />
              </div>
              <span className="text-sm text-yellow-300">
                {Math.round(progress)}%
              </span>
            </div>

            <div className="text-right text-white">
              <div className="text-sm text-yellow-200">–í—Ä–µ–º—è –∏–∑—É—á–µ–Ω–∏—è:</div>
              <div className="font-semibold">{formatTime(readingTime)}</div>
            </div>
          </div>
        </PremiumCard>

        {/* –ö–æ–Ω—Ç–µ–Ω—Ç –º–æ–¥—É–ª—è */}
        <PremiumCard variant="default" className="mb-8">
          <div className="text-white">
            <h2 className="text-2xl font-bold text-yellow-300 mb-6">
              {currentSectionData.title || '–û—Å–Ω–æ–≤—ã —Ä–∞–±–æ—Ç—ã –Ω–∞ –≤—ã—Å–æ—Ç–µ'}
            </h2>
            
            <div className="prose prose-invert max-w-none text-white">
              <h3>üéØ –ß—Ç–æ —Ç–∞–∫–æ–µ —Ä–∞–±–æ—Ç—ã –Ω–∞ –≤—ã—Å–æ—Ç–µ?</h3>
              <p>
                –†–∞–±–æ—Ç—ã –Ω–∞ –≤—ã—Å–æ—Ç–µ ‚Äî —ç—Ç–æ —Ä–∞–±–æ—Ç—ã, –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ—Ç–æ—Ä—ã—Ö —Ä–∞–±–æ—Ç–Ω–∏–∫ 
                –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –Ω–∞ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–∏ –º–µ–Ω–µ–µ 2 –º –æ—Ç –Ω–µ–æ–≥—Ä–∞–∂–¥–µ–Ω–Ω—ã—Ö –ø–µ—Ä–µ–ø–∞–¥–æ–≤ –ø–æ –≤—ã—Å–æ—Ç–µ 
                1,8 –º –∏ –±–æ–ª–µ–µ, –∏–ª–∏ —Ä–∞–±–æ—Ç—ã –Ω–∞ –ø–ª–æ—â–∞–¥–∫–∞—Ö –Ω–∞ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–∏ –º–µ–Ω–µ–µ 2 –º 
                –æ—Ç –∫—Ä–∞—è –ø–µ—Ä–µ–ø–∞–¥–∞ –ø–æ –≤—ã—Å–æ—Ç–µ –±–æ–ª–µ–µ 1,8 –º.
              </p>
              
              <h4>üìã –ì—Ä—É–ø–ø—ã –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ –Ω–∞ –≤—ã—Å–æ—Ç–µ:</h4>
              <div className="overflow-x-auto mb-6">
                <table className="min-w-full bg-white/5 rounded-lg overflow-hidden border border-white/10">
                  <thead>
                    <tr className="bg-white/10">
                      <th className="px-6 py-3 text-left text-xs font-medium text-yellow-200 uppercase tracking-wider">–ì—Ä—É–ø–ø–∞</th>
                      <th className="px-6 py-3 text-left text-xs font-medium text-yellow-200 uppercase tracking-wider">–ö—Ç–æ –ø–æ–ª—É—á–∞–µ—Ç</th>
                      <th className="px-6 py-3 text-left text-xs font-medium text-yellow-200 uppercase tracking-wider">–û–±—É—á–µ–Ω–∏–µ</th>
                      <th className="px-6 py-3 text-left text-xs font-medium text-yellow-200 uppercase tracking-wider">–ü–µ—Ä–µ–∞—Ç—Ç–µ—Å—Ç–∞—Ü–∏—è</th>
                    </tr>
                  </thead>
                  <tbody className="divide-y divide-white/10">
                    <tr className="hover:bg-white/5">
                      <td className="px-6 py-4 text-sm text-white font-semibold">1 –≥—Ä—É–ø–ø–∞</td>
                      <td className="px-6 py-4 text-sm text-white">–†–∞–±–æ—Ç–Ω–∏–∫–∏ –≤ —Å–æ—Å—Ç–∞–≤–µ –±—Ä–∏–≥–∞–¥—ã</td>
                      <td className="px-6 py-4 text-sm text-white">40 —á–∞—Å–æ–≤ + —Å—Ç–∞–∂–∏—Ä–æ–≤–∫–∞ 2 –¥–Ω—è</td>
                      <td className="px-6 py-4 text-sm text-white">–ï–∂–µ–≥–æ–¥–Ω–æ</td>
                    </tr>
                    <tr className="hover:bg-white/5">
                      <td className="px-6 py-4 text-sm text-white font-semibold">2 –≥—Ä—É–ø–ø–∞</td>
                      <td className="px-6 py-4 text-sm text-white">–ë—Ä–∏–≥–∞–¥–∏—Ä—ã, –º–∞—Å—Ç–µ—Ä–∞, –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–µ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–∏</td>
                      <td className="px-6 py-4 text-sm text-white">40 —á–∞—Å–æ–≤ + —Å—Ç–∞–∂–∏—Ä–æ–≤–∫–∞ 2 –¥–Ω—è</td>
                      <td className="px-6 py-4 text-sm text-white">–ï–∂–µ–≥–æ–¥–Ω–æ</td>
                    </tr>
                    <tr className="hover:bg-white/5">
                      <td className="px-6 py-4 text-sm text-white font-semibold">3 –≥—Ä—É–ø–ø–∞</td>
                      <td className="px-6 py-4 text-sm text-white">–û—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–µ –∑–∞ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—é —Ä–∞–±–æ—Ç, –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–∏</td>
                      <td className="px-6 py-4 text-sm text-white">72 —á–∞—Å–∞</td>
                      <td className="px-6 py-4 text-sm text-white">–ö–∞–∂–¥—ã–µ 5 –ª–µ—Ç</td>
                    </tr>
                  </tbody>
                </table>
              </div>

              <h4>‚ö†Ô∏è –í–∏–¥—ã —Ä–∞–±–æ—Ç, —Ç—Ä–µ–±—É—é—â–∏—Ö –¥–æ–ø—É—Å–∫–∞:</h4>
              <ul>
                <li>–ö—Ä–æ–≤–µ–ª—å–Ω—ã–µ —Ä–∞–±–æ—Ç—ã</li>
                <li>–ú–æ–Ω—Ç–∞–∂ —Ñ–∞—Å–∞–¥–æ–≤ –∏ –Ω–∞–≤–µ—Å–Ω—ã—Ö –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–π</li>
                <li>–ü—Ä–æ–º—ã—à–ª–µ–Ω–Ω—ã–π –∞–ª—å–ø–∏–Ω–∏–∑–º</li>
                <li>–†–∞–±–æ—Ç—ã –Ω–∞ –º–∞—á—Ç–∞—Ö –∏ –≤—ã—à–∫–∞—Ö</li>
                <li>–ú–æ–Ω—Ç–∞–∂–Ω—ã–µ —Ä–∞–±–æ—Ç—ã –Ω–∞ –ª–µ—Å—Ç–Ω–∏—Ü–∞—Ö —Å–≤—ã—à–µ 5 –º–µ—Ç—Ä–æ–≤</li>
                <li>–†–∞–±–æ—Ç—ã –≤ –∫–æ–ª–æ–¥—Ü–∞—Ö –∏ —Ç—Ä–∞–Ω—à–µ—è—Ö –≥–ª—É–±–∏–Ω–æ–π –±–æ–ª–µ–µ 1,8 –º</li>
              </ul>

              <h4>üõ°Ô∏è –°—Ä–µ–¥—Å—Ç–≤–∞ –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ–π –∑–∞—â–∏—Ç—ã:</h4>
              <ul>
                <li>–°—Ç—Ä–∞—Ö–æ–≤–æ—á–Ω—ã–µ –ø—Ä–∏–≤—è–∑–∏ (—É–¥–µ—Ä–∂–∏–≤–∞—é—â–∏–µ, –ø–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä—É—é—â–∏–µ, —Å—Ç—Ä–∞—Ö–æ–≤–æ—á–Ω—ã–µ)</li>
                <li>–°–æ–µ–¥–∏–Ω–∏—Ç–µ–ª—å–Ω–æ-–∞–º–æ—Ä—Ç–∏–∑–∏—Ä—É—é—â–∏–µ –ø–æ–¥—Å–∏—Å—Ç–µ–º—ã</li>
                <li>–ê–Ω–∫–µ—Ä–Ω—ã–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞</li>
                <li>–ö–∞—Å–∫–∏ –∑–∞—â–∏—Ç–Ω—ã–µ</li>
                <li>–°—Ä–µ–¥—Å—Ç–≤–∞ –∑–∞—â–∏—Ç—ã —Ä—É–∫ –∏ –Ω–æ–≥</li>
              </ul>
            </div>
          </div>
        </PremiumCard>

        {/* –í–∞–∂–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
        <PremiumCard variant="default" className="mb-8 bg-red-500/10 border border-red-400/30">
          <div className="text-white">
            <h3 className="text-xl font-bold text-red-300 mb-3 flex items-center">
              <span className="mr-2 text-2xl">‚ö†Ô∏è</span> –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏ –≤–∞–∂–Ω–æ:
            </h3>
            <p className="text-white leading-relaxed">
              –î–æ–ø—É—Å–∫ –Ω–∞ –≤—ã—Å–æ—Ç—É ‚Äî —ç—Ç–æ –Ω–µ –ø—Ä–æ—Å—Ç–æ —Ñ–æ—Ä–º–∞–ª—å–Ω–æ—Å—Ç—å, –∞ –∑–∞—â–∏—Ç–∞ –æ—Ç —à—Ç—Ä–∞—Ñ–æ–≤ –¥–æ 200 000 —Ä—É–±–ª–µ–π 
              –∏ —É–≥–æ–ª–æ–≤–Ω–æ–π –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏ –ø—Ä–∏ –Ω–µ—Å—á–∞—Å—Ç–Ω—ã—Ö —Å–ª—É—á–∞—è—Ö. –ö–∞–∂–¥—ã–π —Ä–∞–±–æ—Ç–Ω–∏–∫, –ø–æ–¥–Ω–∏–º–∞—é—â–∏–π—Å—è 
              –≤—ã—à–µ 1,8 –º–µ—Ç—Ä–∞, –¥–æ–ª–∂–µ–Ω –∏–º–µ—Ç—å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é –≥—Ä—É–ø–ø—É –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏.
            </p>
          </div>
        </PremiumCard>

        {/* –®—Ç—Ä–∞—Ñ—ã */}
        <PremiumCard variant="default" className="mb-8 bg-yellow-500/10 border border-yellow-400/30">
          <div className="text-white">
            <h3 className="text-xl font-bold text-yellow-300 mb-3 flex items-center">
              <span className="mr-2 text-2xl">üí∞</span> –®—Ç—Ä–∞—Ñ—ã –∑–∞ –Ω–∞—Ä—É—à–µ–Ω–∏—è:
            </h3>
            <ul className="text-white space-y-2">
              <li>‚Ä¢ –û—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –æ–±—É—á–µ–Ω–∏—è: 130 000 - 200 000 —Ä—É–±.</li>
              <li>‚Ä¢ –î–æ–ø—É—Å–∫ –Ω–µ–æ–±—É—á–µ–Ω–Ω–æ–≥–æ —Ä–∞–±–æ—Ç–Ω–∏–∫–∞: 200 000 —Ä—É–±.</li>
              <li>‚Ä¢ –ù–∞—Ä—É—à–µ–Ω–∏–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ –Ω–∞ –≤—ã—Å–æ—Ç–µ: –¥–æ 200 000 —Ä—É–±.</li>
              <li>‚Ä¢ –ü—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–∫–∞ –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏: –¥–æ 90 —Å—É—Ç–æ–∫</li>
              <li>‚Ä¢ –ü—Ä–∏ –Ω–µ—Å—á–∞—Å—Ç–Ω–æ–º —Å–ª—É—á–∞–µ: —É–≥–æ–ª–æ–≤–Ω–∞—è –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å</li>
            </ul>
          </div>
        </PremiumCard>

        {/* –ü—Ä–æ–¥–∞–∂–Ω—ã–π –∞—Ä–≥—É–º–µ–Ω—Ç */}
        <PremiumCard variant="default" className="mb-8 bg-emerald-500/10 border border-emerald-400/30">
          <div className="text-white">
            <h3 className="text-xl font-bold text-emerald-300 mb-3 flex items-center">
              <span className="mr-2 text-2xl">üí∞</span> –ü—Ä–æ–¥–∞–∂–Ω—ã–π –∞—Ä–≥—É–º–µ–Ω—Ç:
            </h3>
            <p className="text-white leading-relaxed italic">
              –û–±—É—á–µ–Ω–∏–µ –Ω–∞ –¥–æ–ø—É—Å–∫ –∫ —Ä–∞–±–æ—Ç–∞–º –Ω–∞ –≤—ã—Å–æ—Ç–µ —Å—Ç–æ–∏—Ç 3 000-6 000 —Ä—É–±–ª–µ–π –Ω–∞ 1-3 –≥–æ–¥–∞. 
              –®—Ç—Ä–∞—Ñ –∑–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –¥–æ–ø—É—Å–∫–∞ ‚Äî 200 000 —Ä—É–±–ª–µ–π –∑–∞ –∫–∞–∂–¥–æ–≥–æ —Ä–∞–±–æ—Ç–Ω–∏–∫–∞. 
              –û—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –¥–æ–ø—É—Å–∫–∞ —É –æ–¥–Ω–æ–≥–æ —Ä–∞–±–æ—Ç–Ω–∏–∫–∞ –º–æ–∂–µ—Ç –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Å—é —Å—Ç—Ä–æ–π–∫—É 
              –∏ –æ–±–æ–π—Ç–∏—Å—å –≤ –º–∏–ª–ª–∏–æ–Ω—ã —É–±—ã—Ç–∫–æ–≤.
            </p>
          </div>
        </PremiumCard>

        {/* –ù–∞–≤–∏–≥–∞—Ü–∏—è */}
        <div className="flex items-center justify-between">
          <RippleButton
            variant="outline"
            onClick={backToDashboard}
            className="text-yellow-300 border-yellow-300 hover:bg-yellow-500/20"
          >
            ‚Üê –ù–∞–∑–∞–¥ –∫ –º–æ–¥—É–ª—è–º
          </RippleButton>

          <div className="flex space-x-4">
            <RippleButton
              variant="outline"
              onClick={prevSection}
              disabled={currentSection === 0}
              className="text-yellow-300 border-yellow-300 hover:bg-yellow-500/20 disabled:opacity-50"
            >
              ‚Üê –ü—Ä–µ–¥—ã–¥—É—â–∏–π
            </RippleButton>

            <RippleButton
              variant="glow"
              onClick={nextSection}
              className="bg-yellow-600 hover:bg-yellow-500 text-white"
            >
              {currentSection === (moduleData.sections?.length - 1) ? '–ó–∞–≤–µ—Ä—à–∏—Ç—å –º–æ–¥—É–ª—å' : '–°–ª–µ–¥—É—é—â–∏–π ‚Üí'}
            </RippleButton>
          </div>
        </div>
      </div>
    </PremiumPage>
  )
}

export default Module8HeightPermit // ‚úÖ –ü–†–ê–í–ò–õ–¨–ù–´–ô —ç–∫—Å–ø–æ—Ä—Ç –¥–ª—è Height Permit