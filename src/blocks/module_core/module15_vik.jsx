import React, { useState, useEffect, useCallback } from 'react'
import { useNavigate, useParams } from 'react-router-dom'

// ‚úÖ –ü–†–ê–í–ò–õ–¨–ù–´–ï –∏–º–ø–æ—Ä—Ç—ã –ø—Ä–µ–º–∏–∞–ª—å–Ω—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
import { PremiumPage, PremiumCard, RippleButton, AnimatedProgress } from '../../components/premium/PremiumUI.jsx'
import { useSounds } from '../../components/premium/SoundSystem.jsx'

// ‚úÖ UI –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
import ProgressBar from '../../components/ProgressBar.jsx'
import BadgeMeter from '../../components/BadgeMeter.jsx'
import { notify } from '../../components/NotificationPanel.jsx'

// ‚úÖ API
import { contentApi } from '../../api/mockContentApi.js'
import { progressApi } from '../../api/mockProgressApi.js'

const Module15VIK = () => { // ‚úÖ –ü–†–ê–í–ò–õ–¨–ù–û–ï –Ω–∞–∑–≤–∞–Ω–∏–µ –¥–ª—è VIK
  const navigate = useNavigate()
  const { moduleId } = useParams()
  const { sounds } = useSounds() // ‚úÖ –ó–≤—É–∫–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω—ã
  
  const [currentSection, setCurrentSection] = useState(0)
  const [completedSections, setCompletedSections] = useState([])
  const [readingTime, setReadingTime] = useState(0)
  const [isReading, setIsReading] = useState(false)
  const [moduleData, setModuleData] = useState(null)
  const [isLoading, setIsLoading] = useState(true)

  // –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –º–æ–¥—É–ª—è –∏–∑ API
  useEffect(() => {
    const fetchModuleContent = async () => {
      setIsLoading(true)
      try {
        const parsedModuleId = parseInt(moduleId) || 15
        if (isNaN(parsedModuleId)) {
          throw new Error('–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π ID –º–æ–¥—É–ª—è.')
        }
        const data = await contentApi.fetchModuleContent(parsedModuleId)
        setModuleData(data)
        
        // –ó–∞–≥—Ä—É–∂–∞–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        const userProgress = await progressApi.fetchUserProgress()
        if (userProgress.completedModules) {
          const moduleProgress = userProgress.moduleProgress?.[parsedModuleId] || {}
          setCompletedSections(moduleProgress.completedSections || [])
        }
        
        sounds.success()
      } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –º–æ–¥—É–ª—è:', error)
        notify.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏', error.message || '–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∫–æ–Ω—Ç–µ–Ω—Ç –º–æ–¥—É–ª—è.')
        sounds.error()
        navigate('/dashboard')
      } finally {
        setIsLoading(false)
      }
    }

    fetchModuleContent()
  }, [moduleId, navigate, sounds])

  // –¢–∞–π–º–µ—Ä —á—Ç–µ–Ω–∏—è
  useEffect(() => {
    if (isReading) {
      const timer = setInterval(() => {
        setReadingTime(prev => prev + 1)
      }, 1000)
      return () => clearInterval(timer)
    }
  }, [isReading])

  useEffect(() => {
    setIsReading(true)
    setReadingTime(0)
    return () => setIsReading(false)
  }, [currentSection])

  const nextSection = useCallback(() => {
    if (!moduleData) return
    if (currentSection < moduleData.sections.length - 1) {
      setCurrentSection(currentSection + 1)
      sounds.success()
    } else {
      completeModule()
    }
  }, [currentSection, moduleData, sounds])

  const prevSection = useCallback(() => {
    if (currentSection > 0) {
      setCurrentSection(currentSection - 1)
      sounds.click()
    }
  }, [currentSection, sounds])

  const completeModule = async () => {
    try {
      await progressApi.updateModuleProgress({
        moduleId: parseInt(moduleId) || 15,
        completedSections: completedSections
      })
      notify.success('–ú–æ–¥—É–ª—å –∑–∞–≤–µ—Ä—à–µ–Ω', '–í–ò–ö - –í–∏–∑—É–∞–ª—å–Ω—ã–π –∏ –∏–∑–º–µ—Ä–∏—Ç–µ–ª—å–Ω—ã–π –∫–æ–Ω—Ç—Ä–æ–ª—å –∏–∑—É—á–µ–Ω —É—Å–ø–µ—à–Ω–æ!')
      sounds.achievement()
      navigate(`/module/${moduleId}/quiz`)
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –º–æ–¥—É–ª—è:', error)
      notify.error('–û—à–∏–±–∫–∞', error.message || '–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≤–µ—Ä—à–∏—Ç—å –º–æ–¥—É–ª—å.')
      sounds.error()
    }
  }

  const backToDashboard = () => {
    sounds.click()
    navigate('/dashboard')
  }

  const formatTime = (seconds) => {
    const minutes = Math.floor(seconds / 60)
    const remainingSeconds = seconds % 60
    return `${minutes}:${remainingSeconds.toString().padStart(2, '0')}`
  }

  // –ó–∞–≥—Ä—É–∑–æ—á–Ω—ã–π —ç–∫—Ä–∞–Ω
  if (isLoading || !moduleData) {
    return (
      <PremiumPage background="matrix" className="min-h-screen flex items-center justify-center">
        <PremiumCard variant="glow" className="text-center">
          <div className="w-20 h-20 border-4 border-green-400 border-t-transparent rounded-full animate-spin mx-auto mb-6"></div>
          <h2 className="text-2xl font-bold text-white mb-2">–ó–∞–≥—Ä—É–∑–∫–∞ –º–æ–¥—É–ª—è...</h2>
          <p className="text-green-200">–ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –º–∞—Ç–µ—Ä–∏–∞–ª—ã –ø–æ –í–ò–ö</p>
        </PremiumCard>
      </PremiumPage>
    )
  }

  const currentSectionData = moduleData.sections[currentSection]
  const progress = Math.round(((currentSection + 1) / moduleData.sections.length) * 100)

  return (
    <PremiumPage background="neural" className="min-h-screen">
      <div className="max-w-4xl mx-auto px-6 py-12">
        
        {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ –º–æ–¥—É–ª—è */}
        <PremiumCard variant="glow" className="mb-8 text-center">
          <div className="mb-6">
            <h1 className="text-4xl font-bold text-white mb-4">
              üîç –ú–æ–¥—É–ª—å 15: –í–ò–ö
            </h1>
            <p className="text-green-200 text-lg mb-4">
              –í–∏–∑—É–∞–ª—å–Ω—ã–π –∏ –∏–∑–º–µ—Ä–∏—Ç–µ–ª—å–Ω—ã–π –∫–æ–Ω—Ç—Ä–æ–ª—å - –æ—Å–Ω–æ–≤—ã –Ω–µ—Ä–∞–∑—Ä—É—à–∞—é—â–µ–≥–æ –∫–æ–Ω—Ç—Ä–æ–ª—è
            </p>
            
            {/* –ü—Ä–æ–≥—Ä–µ—Å—Å */}
            <div className="flex items-center justify-center space-x-4 mb-4">
              <span className="text-sm text-green-300">
                –†–∞–∑–¥–µ–ª {currentSection + 1} –∏–∑ {moduleData.sections?.length || 1}
              </span>
              <div className="flex-1 max-w-xs">
                <AnimatedProgress value={progress} />
              </div>
              <span className="text-sm text-green-300">
                {Math.round(progress)}%
              </span>
            </div>

            <div className="text-right text-white">
              <div className="text-sm text-green-200">–í—Ä–µ–º—è –∏–∑—É—á–µ–Ω–∏—è:</div>
              <div className="font-semibold">{formatTime(readingTime)}</div>
            </div>
          </div>
        </PremiumCard>

        {/* –ö–æ–Ω—Ç–µ–Ω—Ç –º–æ–¥—É–ª—è */}
        <PremiumCard variant="default" className="mb-8">
          <div className="text-white">
            <h2 className="text-2xl font-bold text-green-300 mb-6">
              {currentSectionData.title || '–û—Å–Ω–æ–≤—ã –í–ò–ö'}
            </h2>
            
            <div className="prose prose-invert max-w-none text-white">
              <h3>üéØ –ß—Ç–æ —Ç–∞–∫–æ–µ –í–ò–ö?</h3>
              <p>
                –í–∏–∑—É–∞–ª—å–Ω—ã–π –∏ –∏–∑–º–µ—Ä–∏—Ç–µ–ª—å–Ω—ã–π –∫–æ–Ω—Ç—Ä–æ–ª—å (–í–ò–ö) ‚Äî –±–∞–∑–æ–≤—ã–π –º–µ—Ç–æ–¥ –Ω–µ—Ä–∞–∑—Ä—É—à–∞—é—â–µ–≥–æ –∫–æ–Ω—Ç—Ä–æ–ª—è, 
                –∑–∞–∫–ª—é—á–∞—é—â–∏–π—Å—è –≤ –æ—Å–º–æ—Ç—Ä–µ –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–∏ –æ–±—ä–µ–∫—Ç–∞ –∫–æ–Ω—Ç—Ä–æ–ª—è –Ω–µ–≤–æ–æ—Ä—É–∂–µ–Ω–Ω—ã–º –≥–ª–∞–∑–æ–º 
                –∏–ª–∏ —Å –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ–º –æ–ø—Ç–∏—á–µ—Å–∫–∏—Ö –ø—Ä–∏–±–æ—Ä–æ–≤, –∞ —Ç–∞–∫–∂–µ –≤ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–∏ –≥–µ–æ–º–µ—Ç—Ä–∏—á–µ—Å–∫–∏—Ö 
                —Ä–∞–∑–º–µ—Ä–æ–≤ –∏–∑–¥–µ–ª–∏—è —Å –ø–æ–º–æ—â—å—é —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –∏–∑–º–µ—Ä–∏—Ç–µ–ª—å–Ω—ã—Ö –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤.
              </p>
              
              <h4>üìã –£—Ä–æ–≤–Ω–∏ –∞—Ç—Ç–µ—Å—Ç–∞—Ü–∏–∏ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤ –ø–æ –í–ò–ö:</h4>
              <div className="overflow-x-auto mb-6">
                <table className="min-w-full bg-white/5 rounded-lg overflow-hidden border border-white/10">
                  <thead>
                    <tr className="bg-white/10">
                      <th className="px-4 py-3 text-left text-xs font-medium text-green-200 uppercase tracking-wider">–£—Ä–æ–≤–µ–Ω—å</th>
                      <th className="px-4 py-3 text-left text-xs font-medium text-green-200 uppercase tracking-wider">–ö–≤–∞–ª–∏—Ñ–∏–∫–∞—Ü–∏—è</th>
                      <th className="px-4 py-3 text-left text-xs font-medium text-green-200 uppercase tracking-wider">–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ/–û–ø—ã—Ç</th>
                      <th className="px-4 py-3 text-left text-xs font-medium text-green-200 uppercase tracking-wider">–°—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è</th>
                    </tr>
                  </thead>
                  <tbody className="divide-y divide-white/10">
                    <tr className="hover:bg-white/5">
                      <td className="px-4 py-4 text-sm text-white font-semibold">I —É—Ä–æ–≤–µ–Ω—å</td>
                      <td className="px-4 py-4 text-sm text-white">–î–µ—Ñ–µ–∫—Ç–æ—Å–∫–æ–ø–∏—Å—Ç</td>
                      <td className="px-4 py-4 text-sm text-white">–°—Ä–µ–¥–Ω–µ–µ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–µ + 3 –º–µ—Å—è—Ü–∞ –ø—Ä–∞–∫—Ç–∏–∫–∏</td>
                      <td className="px-4 py-4 text-sm text-white">5 –ª–µ—Ç</td>
                    </tr>
                    <tr className="hover:bg-white/5">
                      <td className="px-4 py-4 text-sm text-white font-semibold">II —É—Ä–æ–≤–µ–Ω—å</td>
                      <td className="px-4 py-4 text-sm text-white">–°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç</td>
                      <td className="px-4 py-4 text-sm text-white">–í—ã—Å—à–µ–µ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ + 1 –≥–æ–¥ –æ–ø—ã—Ç–∞</td>
                      <td className="px-4 py-4 text-sm text-white">5 –ª–µ—Ç</td>
                    </tr>
                    <tr className="hover:bg-white/5">
                      <td className="px-4 py-4 text-sm text-white font-semibold">III —É—Ä–æ–≤–µ–Ω—å</td>
                      <td className="px-4 py-4 text-sm text-white">–≠–∫—Å–ø–µ—Ä—Ç</td>
                      <td className="px-4 py-4 text-sm text-white">–í—ã—Å—à–µ–µ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ + 4 –≥–æ–¥–∞ –æ–ø—ã—Ç–∞</td>
                      <td className="px-4 py-4 text-sm text-white">5 –ª–µ—Ç</td>
                    </tr>
                  </tbody>
                </table>
              </div>

              <h4>‚ö†Ô∏è –û–±–ª–∞—Å—Ç–∏ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –í–ò–ö:</h4>
              <ul>
                <li>–ö–æ–Ω—Ç—Ä–æ–ª—å —Å–≤–∞—Ä–Ω—ã—Ö —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π</li>
                <li>–û–±—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ —Å—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω—ã—Ö –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–π</li>
                <li>–ö–æ–Ω—Ç—Ä–æ–ª—å –ª–∏—Ç—ã—Ö –¥–µ—Ç–∞–ª–µ–π</li>
                <li>–ü—Ä–æ–≤–µ—Ä–∫–∞ –º–µ—Ö–∞–Ω–∏—á–µ—Å–∫–∏ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–µ–π</li>
                <li>–ö–æ–Ω—Ç—Ä–æ–ª—å –ø–æ–∫—Ä—ã—Ç–∏–π –∏ –∑–∞—â–∏—Ç–Ω—ã—Ö —Å–ª–æ–µ–≤</li>
                <li>–û–±—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ —Ç—Ä—É–±–æ–ø—Ä–æ–≤–æ–¥–æ–≤</li>
                <li>–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è</li>
              </ul>

              <h4>üîç –û—Å–Ω–æ–≤–Ω—ã–µ –≤–∏–¥—ã –¥–µ—Ñ–µ–∫—Ç–æ–≤, –≤—ã—è–≤–ª—è–µ–º—ã—Ö –í–ò–ö:</h4>
              <ul>
                <li><strong>–ü–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–Ω—ã–µ —Ç—Ä–µ—â–∏–Ω—ã:</strong> –í–∏–¥–∏–º—ã–µ –Ω–∞—Ä—É—à–µ–Ω–∏—è —Å–ø–ª–æ—à–Ω–æ—Å—Ç–∏ –º–∞—Ç–µ—Ä–∏–∞–ª–∞</li>
                <li><strong>–ü–æ—Ä—ã –∏ —Å–≤–∏—â–∏:</strong> –ü–æ–ª–æ—Å—Ç–∏ –Ω–∞ –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–∏ –∏–ª–∏ —Å–∫–≤–æ–∑–Ω—ã–µ –æ—Ç–≤–µ—Ä—Å—Ç–∏—è</li>
                <li><strong>–ù–µ–ø—Ä–æ–≤–∞—Ä—ã:</strong> –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ–µ —Å–ø–ª–∞–≤–ª–µ–Ω–∏–µ –º–µ—Ç–∞–ª–ª–∞ –≤ —Å–≤–∞—Ä–Ω–æ–º —à–≤–µ</li>
                <li><strong>–ü–æ–¥—Ä–µ–∑—ã:</strong> –£–≥–ª—É–±–ª–µ–Ω–∏—è –≤ –æ—Å–Ω–æ–≤–Ω–æ–º –º–µ—Ç–∞–ª–ª–µ –≤–¥–æ–ª—å –≥—Ä–∞–Ω–∏—Ü—ã —à–≤–∞</li>
                <li><strong>–ù–∞–ø–ª—ã–≤—ã:</strong> –ò–∑–±—ã—Ç–æ—á–Ω—ã–π –º–µ—Ç–∞–ª–ª, –Ω–∞—Ç–µ–∫—à–∏–π –Ω–∞ –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç—å</li>
                <li><strong>–ö—Ä–∞—Ç–µ—Ä—ã:</strong> –£–≥–ª—É–±–ª–µ–Ω–∏—è –≤ –∫–æ–Ω—Ü–µ —Å–≤–∞—Ä–Ω–æ–≥–æ —à–≤–∞</li>
                <li><strong>–î–µ—Ñ–æ—Ä–º–∞—Ü–∏–∏:</strong> –û—Ç–∫–ª–æ–Ω–µ–Ω–∏—è –æ—Ç –∑–∞–¥–∞–Ω–Ω–æ–π –≥–µ–æ–º–µ—Ç—Ä–∏–∏</li>
              </ul>

              <h4>üìè –ò–∑–º–µ—Ä–∏—Ç–µ–ª—å–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –¥–ª—è –í–ò–ö:</h4>
              <ul>
                <li>–®—Ç–∞–Ω–≥–µ–Ω—Ü–∏—Ä–∫—É–ª–∏ –∏ –º–∏–∫—Ä–æ–º–µ—Ç—Ä—ã</li>
                <li>–®–∞–±–ª–æ–Ω—ã —Å–≤–∞—Ä—â–∏–∫–∞ —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–µ</li>
                <li>–õ–∏–Ω–µ–π–∫–∏ –∏ —Ä—É–ª–µ—Ç–∫–∏</li>
                <li>–£–≥–ª–æ–º–µ—Ä—ã –∏ —É—Ä–æ–≤–Ω–∏</li>
                <li>–©—É–ø—ã –¥–ª—è –∏–∑–º–µ—Ä–µ–Ω–∏—è –∑–∞–∑–æ—Ä–æ–≤</li>
                <li>–õ—É–ø—ã –∏ –æ–ø—Ç–∏—á–µ—Å–∫–∏–µ –ø—Ä–∏–±–æ—Ä—ã</li>
                <li>–≠–Ω–¥–æ—Å–∫–æ–ø—ã –¥–ª—è —Ç—Ä—É–¥–Ω–æ–¥–æ—Å—Ç—É–ø–Ω—ã—Ö –º–µ—Å—Ç</li>
              </ul>
            </div>
          </div>
        </PremiumCard>

        {/* –í–∞–∂–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
        <PremiumCard variant="default" className="mb-8 bg-yellow-500/10 border border-yellow-400/30">
          <div className="text-white">
            <h3 className="text-xl font-bold text-yellow-300 mb-3 flex items-center">
              <span className="mr-2 text-2xl">üí°</span> –í–∞–∂–Ω–æ –∑–Ω–∞—Ç—å:
            </h3>
            <p className="text-white leading-relaxed">
              –í–ò–ö —è–≤–ª—è–µ—Ç—Å—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–º —ç—Ç–∞–ø–æ–º –ø—Ä–∏ –∫–æ–Ω—Ç—Ä–æ–ª–µ –∫–∞—á–µ—Å—Ç–≤–∞ —Å–≤–∞—Ä–Ω—ã—Ö —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π 
              –Ω–∞ –≤—Å–µ—Ö –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã—Ö –æ–±—ä–µ–∫—Ç–∞—Ö. –û–∫–æ–ª–æ 80% –¥–µ—Ñ–µ–∫—Ç–æ–≤ –º–æ–∂–Ω–æ –≤—ã—è–≤–∏—Ç—å 
              –∏–º–µ–Ω–Ω–æ –º–µ—Ç–æ–¥–æ–º –≤–∏–∑—É–∞–ª—å–Ω–æ–≥–æ –∏ –∏–∑–º–µ—Ä–∏—Ç–µ–ª—å–Ω–æ–≥–æ –∫–æ–Ω—Ç—Ä–æ–ª—è, —á—Ç–æ –¥–µ–ª–∞–µ—Ç –µ–≥–æ 
              –æ—Å–Ω–æ–≤–æ–ø–æ–ª–∞–≥–∞—é—â–∏–º –≤ —Å–∏—Å—Ç–µ–º–µ –Ω–µ—Ä–∞–∑—Ä—É—à–∞—é—â–µ–≥–æ –∫–æ–Ω—Ç—Ä–æ–ª—è.
            </p>
          </div>
        </PremiumCard>

        {/* –ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ */}
        <PremiumCard variant="default" className="mb-8 bg-blue-500/10 border border-blue-400/30">
          <div className="text-white">
            <h3 className="text-xl font-bold text-blue-300 mb-3 flex items-center">
              <span className="mr-2 text-2xl">‚úÖ</span> –ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ –º–µ—Ç–æ–¥–∞ –í–ò–ö:
            </h3>
            <ul className="text-white space-y-2">
              <li>‚Ä¢ –ü—Ä–æ—Å—Ç–æ—Ç–∞ –∏ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è</li>
              <li>‚Ä¢ –ù–∏–∑–∫–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è –∫–æ–Ω—Ç—Ä–æ–ª—è</li>
              <li>‚Ä¢ –í—ã—Å–æ–∫–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è</li>
              <li>‚Ä¢ –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –∫–æ–Ω—Ç—Ä–æ–ª—è –≤ –ø–æ–ª–µ–≤—ã—Ö —É—Å–ª–æ–≤–∏—è—Ö</li>
              <li>‚Ä¢ –û—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –≤—Ä–µ–¥–Ω–æ–≥–æ –≤–æ–∑–¥–µ–π—Å—Ç–≤–∏—è –Ω–∞ –ø–µ—Ä—Å–æ–Ω–∞–ª</li>
              <li>‚Ä¢ –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å 100% –∫–æ–Ω—Ç—Ä–æ–ª—è –∏–∑–¥–µ–ª–∏–π</li>
            </ul>
          </div>
        </PremiumCard>

        {/* –ü—Ä–æ–¥–∞–∂–Ω—ã–π –∞—Ä–≥—É–º–µ–Ω—Ç */}
        <PremiumCard variant="default" className="mb-8 bg-emerald-500/10 border border-emerald-400/30">
          <div className="text-white">
            <h3 className="text-xl font-bold text-emerald-300 mb-3 flex items-center">
              <span className="mr-2 text-2xl">üí∞</span> –ü—Ä–æ–¥–∞–∂–Ω—ã–π –∞—Ä–≥—É–º–µ–Ω—Ç:
            </h3>
            <p className="text-white leading-relaxed italic">
              –ê—Ç—Ç–µ—Å—Ç–∞—Ü–∏—è —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞ –ø–æ –í–ò–ö —Å—Ç–æ–∏—Ç 15-25 —Ç—ã—Å—è—á —Ä—É–±–ª–µ–π –Ω–∞ 5 –ª–µ—Ç, 
              –Ω–æ –¥–∞–µ—Ç –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä–æ–≤–∞—Ç—å –∫–∞—á–µ—Å—Ç–≤–æ –Ω–∞ –≤—Å–µ—Ö —ç—Ç–∞–ø–∞—Ö –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞. 
              –í–ò–ö —è–≤–ª—è–µ—Ç—Å—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–º —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–µ–º –Ω–∞ –æ–±—ä–µ–∫—Ç–∞—Ö –Ω–µ—Ñ—Ç–µ–≥–∞–∑–æ–≤–æ–π –æ—Ç—Ä–∞—Å–ª–∏, 
              –∞—Ç–æ–º–Ω–æ–π —ç–Ω–µ—Ä–≥–µ—Ç–∏–∫–∏, –º–æ—Å—Ç–æ—Å—Ç—Ä–æ–µ–Ω–∏—è. –û—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –∞—Ç—Ç–µ—Å—Ç–æ–≤–∞–Ω–Ω—ã—Ö —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤ 
              –∏—Å–∫–ª—é—á–∞–µ—Ç —É—á–∞—Å—Ç–∏–µ –≤ –∫—Ä—É–ø–Ω—ã—Ö –ø—Ä–æ–µ–∫—Ç–∞—Ö.
            </p>
          </div>
        </PremiumCard>

        {/* –ù–∞–≤–∏–≥–∞—Ü–∏—è */}
        <div className="flex items-center justify-between">
          <RippleButton
            variant="outline"
            onClick={backToDashboard}
            className="text-green-300 border-green-300 hover:bg-green-500/20"
          >
            ‚Üê –ù–∞–∑–∞–¥ –∫ –º–æ–¥—É–ª—è–º
          </RippleButton>

          <div className="flex space-x-4">
            <RippleButton
              variant="outline"
              onClick={prevSection}
              disabled={currentSection === 0}
              className="text-green-300 border-green-300 hover:bg-green-500/20 disabled:opacity-50"
            >
              ‚Üê –ü—Ä–µ–¥—ã–¥—É—â–∏–π
            </RippleButton>

            <RippleButton
              variant="glow"
              onClick={nextSection}
              className="bg-green-600 hover:bg-green-500 text-white"
            >
              {currentSection === (moduleData.sections?.length - 1) ? '–ó–∞–≤–µ—Ä—à–∏—Ç—å –º–æ–¥—É–ª—å' : '–°–ª–µ–¥—É—é—â–∏–π ‚Üí'}
            </RippleButton>
          </div>
        </div>
      </div>
    </PremiumPage>
  )
}

export default Module15VIK // ‚úÖ –ü–†–ê–í–ò–õ–¨–ù–´–ô —ç–∫—Å–ø–æ—Ä—Ç –¥–ª—è VIK