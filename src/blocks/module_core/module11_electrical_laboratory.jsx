import React, { useState, useEffect, useCallback } from 'react'
import { useNavigate, useParams } from 'react-router-dom'

// ‚úÖ –ü–†–ê–í–ò–õ–¨–ù–´–ï –∏–º–ø–æ—Ä—Ç—ã –ø—Ä–µ–º–∏–∞–ª—å–Ω—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
import { PremiumPage, PremiumCard, RippleButton, AnimatedProgress } from '../../components/premium/PremiumUI.jsx'
import { useSounds } from '../../components/premium/SoundSystem.jsx'

// ‚úÖ UI –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
import ProgressBar from '../../components/ProgressBar.jsx'
import BadgeMeter from '../../components/BadgeMeter.jsx'
import { notify } from '../../components/NotificationPanel.jsx'

// ‚úÖ API
import { contentApi } from '../../api/mockContentApi.js'
import { progressApi } from '../../api/mockProgressApi.js'

const Module11ElectricalLaboratory = () => { // ‚úÖ –ü–†–ê–í–ò–õ–¨–ù–û–ï –Ω–∞–∑–≤–∞–Ω–∏–µ –¥–ª—è Electrical Laboratory
  const navigate = useNavigate()
  const { moduleId } = useParams()
  const { sounds } = useSounds() // ‚úÖ –ó–≤—É–∫–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω—ã
  
  const [currentSection, setCurrentSection] = useState(0)
  const [completedSections, setCompletedSections] = useState([])
  const [readingTime, setReadingTime] = useState(0)
  const [isReading, setIsReading] = useState(false)
  const [moduleData, setModuleData] = useState(null)
  const [isLoading, setIsLoading] = useState(true)

  // –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –º–æ–¥—É–ª—è –∏–∑ API
  useEffect(() => {
    const fetchModuleContent = async () => {
      setIsLoading(true)
      try {
        const parsedModuleId = parseInt(moduleId) || 11
        if (isNaN(parsedModuleId)) {
          throw new Error('–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π ID –º–æ–¥—É–ª—è.')
        }
        const data = await contentApi.fetchModuleContent(parsedModuleId)
        setModuleData(data)
        
        // –ó–∞–≥—Ä—É–∂–∞–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        const userProgress = await progressApi.fetchUserProgress()
        if (userProgress.completedModules) {
          const moduleProgress = userProgress.moduleProgress?.[parsedModuleId] || {}
          setCompletedSections(moduleProgress.completedSections || [])
        }
        
        sounds.success()
      } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –º–æ–¥—É–ª—è:', error)
        notify.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏', error.message || '–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∫–æ–Ω—Ç–µ–Ω—Ç –º–æ–¥—É–ª—è.')
        sounds.error()
        navigate('/dashboard')
      } finally {
        setIsLoading(false)
      }
    }

    fetchModuleContent()
  }, [moduleId, navigate, sounds])

  // –¢–∞–π–º–µ—Ä —á—Ç–µ–Ω–∏—è
  useEffect(() => {
    if (isReading) {
      const timer = setInterval(() => {
        setReadingTime(prev => prev + 1)
      }, 1000)
      return () => clearInterval(timer)
    }
  }, [isReading])

  useEffect(() => {
    setIsReading(true)
    setReadingTime(0)
    return () => setIsReading(false)
  }, [currentSection])

  const nextSection = useCallback(() => {
    if (!moduleData) return
    if (currentSection < moduleData.sections.length - 1) {
      setCurrentSection(currentSection + 1)
      sounds.success()
    } else {
      completeModule()
    }
  }, [currentSection, moduleData, sounds])

  const prevSection = useCallback(() => {
    if (currentSection > 0) {
      setCurrentSection(currentSection - 1)
      sounds.click()
    }
  }, [currentSection, sounds])

  const completeModule = async () => {
    try {
      await progressApi.updateModuleProgress({
        moduleId: parseInt(moduleId) || 11,
        completedSections: completedSections
      })
      notify.success('–ú–æ–¥—É–ª—å –∑–∞–≤–µ—Ä—à–µ–Ω', '–≠–ª–µ–∫—Ç—Ä–æ–ª–∞–±–æ—Ä–∞—Ç–æ—Ä–∏—è –∏–∑—É—á–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!')
      sounds.achievement()
      navigate(`/module/${moduleId}/quiz`)
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –º–æ–¥—É–ª—è:', error)
      notify.error('–û—à–∏–±–∫–∞', error.message || '–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≤–µ—Ä—à–∏—Ç—å –º–æ–¥—É–ª—å.')
      sounds.error()
    }
  }

  const backToDashboard = () => {
    sounds.click()
    navigate('/dashboard')
  }

  const formatTime = (seconds) => {
    const minutes = Math.floor(seconds / 60)
    const remainingSeconds = seconds % 60
    return `${minutes}:${remainingSeconds.toString().padStart(2, '0')}`
  }

  // –ó–∞–≥—Ä—É–∑–æ—á–Ω—ã–π —ç–∫—Ä–∞–Ω
  if (isLoading || !moduleData) {
    return (
      <PremiumPage background="matrix" className="min-h-screen flex items-center justify-center">
        <PremiumCard variant="glow" className="text-center">
          <div className="w-20 h-20 border-4 border-teal-400 border-t-transparent rounded-full animate-spin mx-auto mb-6"></div>
          <h2 className="text-2xl font-bold text-white mb-2">–ó–∞–≥—Ä—É–∑–∫–∞ –º–æ–¥—É–ª—è...</h2>
          <p className="text-teal-200">–ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –º–∞—Ç–µ—Ä–∏–∞–ª—ã –ø–æ —ç–ª–µ–∫—Ç—Ä–æ–ª–∞–±–æ—Ä–∞—Ç–æ—Ä–∏–∏</p>
        </PremiumCard>
      </PremiumPage>
    )
  }

  const currentSectionData = moduleData.sections[currentSection]
  const progress = Math.round(((currentSection + 1) / moduleData.sections.length) * 100)

  return (
    <PremiumPage background="neural" className="min-h-screen">
      <div className="max-w-4xl mx-auto px-6 py-12">
        
        {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ –º–æ–¥—É–ª—è */}
        <PremiumCard variant="glow" className="mb-8 text-center">
          <div className="mb-6">
            <h1 className="text-4xl font-bold text-white mb-4">
              üî¨ –ú–æ–¥—É–ª—å 11: –≠–ª–µ–∫—Ç—Ä–æ–ª–∞–±–æ—Ä–∞—Ç–æ—Ä–∏—è
            </h1>
            <p className="text-teal-200 text-lg mb-4">
              –≠–ª–µ–∫—Ç—Ä–æ–∏–∑–º–µ—Ä–∏—Ç–µ–ª—å–Ω–∞—è –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–∏—è - –∞–∫–∫—Ä–µ–¥–∏—Ç–∞—Ü–∏—è –∏ –æ–±–ª–∞—Å—Ç—å –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è
            </p>
            
            {/* –ü—Ä–æ–≥—Ä–µ—Å—Å */}
            <div className="flex items-center justify-center space-x-4 mb-4">
              <span className="text-sm text-teal-300">
                –†–∞–∑–¥–µ–ª {currentSection + 1} –∏–∑ {moduleData.sections?.length || 1}
              </span>
              <div className="flex-1 max-w-xs">
                <AnimatedProgress value={progress} />
              </div>
              <span className="text-sm text-teal-300">
                {Math.round(progress)}%
              </span>
            </div>

            <div className="text-right text-white">
              <div className="text-sm text-teal-200">–í—Ä–µ–º—è –∏–∑—É—á–µ–Ω–∏—è:</div>
              <div className="font-semibold">{formatTime(readingTime)}</div>
            </div>
          </div>
        </PremiumCard>

        {/* –ö–æ–Ω—Ç–µ–Ω—Ç –º–æ–¥—É–ª—è */}
        <PremiumCard variant="default" className="mb-8">
          <div className="text-white">
            <h2 className="text-2xl font-bold text-teal-300 mb-6">
              {currentSectionData.title || '–û—Å–Ω–æ–≤—ã —ç–ª–µ–∫—Ç—Ä–æ–ª–∞–±–æ—Ä–∞—Ç–æ—Ä–∏–∏'}
            </h2>
            
            <div className="prose prose-invert max-w-none text-white">
              <h3>üéØ –ß—Ç–æ —Ç–∞–∫–æ–µ —ç–ª–µ–∫—Ç—Ä–æ–ª–∞–±–æ—Ä–∞—Ç–æ—Ä–∏—è?</h3>
              <p>
                –≠–ª–µ–∫—Ç—Ä–æ–∏–∑–º–µ—Ä–∏—Ç–µ–ª—å–Ω–∞—è –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–∏—è ‚Äî –∞–∫–∫—Ä–µ–¥–∏—Ç–æ–≤–∞–Ω–Ω–∞—è –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è, 
                –≤—ã–ø–æ–ª–Ω—è—é—â–∞—è —ç–ª–µ–∫—Ç—Ä–∏—á–µ—Å–∫–∏–µ –∏–∑–º–µ—Ä–µ–Ω–∏—è –∏ –∏—Å–ø—ã—Ç–∞–Ω–∏—è —ç–ª–µ–∫—Ç—Ä–æ–æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è, 
                —ç–ª–µ–∫—Ç—Ä–æ—É—Å—Ç–∞–Ω–æ–≤–æ–∫ –∏ —Å—Ä–µ–¥—Å—Ç–≤ –∑–∞—â–∏—Ç—ã —Å –≤—ã–¥–∞—á–µ–π –ø—Ä–æ—Ç–æ–∫–æ–ª–æ–≤ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω–æ–π —Ñ–æ—Ä–º—ã.
              </p>
              
              <h4>üìã –û—Å–Ω–æ–≤–Ω—ã–µ –≤–∏–¥—ã –∏–∑–º–µ—Ä–µ–Ω–∏–π:</h4>
              <ul>
                <li>–ò–∑–º–µ—Ä–µ–Ω–∏–µ —Å–æ–ø—Ä–æ—Ç–∏–≤–ª–µ–Ω–∏—è –∏–∑–æ–ª—è—Ü–∏–∏ —ç–ª–µ–∫—Ç—Ä–æ—É—Å—Ç–∞–Ω–æ–≤–æ–∫</li>
                <li>–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç–∏ —Ü–µ–ø–µ–π –∑–∞–∑–µ–º–ª–µ–Ω–∏—è –∏ –∑–∞–Ω—É–ª–µ–Ω–∏—è</li>
                <li>–ò–∑–º–µ—Ä–µ–Ω–∏–µ —Å–æ–ø—Ä–æ—Ç–∏–≤–ª–µ–Ω–∏—è –∑–∞–∑–µ–º–ª—è—é—â–∏—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤</li>
                <li>–ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö –≤—ã–∫–ª—é—á–∞—Ç–µ–ª–µ–π –∏ –£–ó–û</li>
                <li>–ò—Å–ø—ã—Ç–∞–Ω–∏–µ —Å—Ä–µ–¥—Å—Ç–≤ –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ–π –∑–∞—â–∏—Ç—ã</li>
                <li>–ò–∑–º–µ—Ä–µ–Ω–∏–µ –æ—Å–≤–µ—â–µ–Ω–Ω–æ—Å—Ç–∏ —Ä–∞–±–æ—á–∏—Ö –º–µ—Å—Ç</li>
              </ul>

              <h4>‚ö†Ô∏è –ö–æ–º—É –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã —É—Å–ª—É–≥–∏ —ç–ª–µ–∫—Ç—Ä–æ–ª–∞–±–æ—Ä–∞—Ç–æ—Ä–∏–∏:</h4>
              <ul>
                <li>–ü—Ä–æ–º—ã—à–ª–µ–Ω–Ω—ã–µ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏—è</li>
                <li>–û—Ñ–∏—Å–Ω—ã–µ –∏ —Ç–æ—Ä–≥–æ–≤—ã–µ —Ü–µ–Ω—Ç—Ä—ã</li>
                <li>–ñ–∏–ª—ã–µ –¥–æ–º–∞ –∏ –¢–°–ñ</li>
                <li>–°—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω—ã–µ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏</li>
                <li>–≠–Ω–µ—Ä–≥–µ—Ç–∏—á–µ—Å–∫–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏</li>
                <li>–ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–µ —É—á—Ä–µ–∂–¥–µ–Ω–∏—è</li>
              </ul>

              <h4>üìÖ –ü–µ—Ä–∏–æ–¥–∏—á–Ω–æ—Å—Ç—å –∏–∑–º–µ—Ä–µ–Ω–∏–π:</h4>
              <div className="overflow-x-auto mb-6">
                <table className="min-w-full bg-white/5 rounded-lg overflow-hidden border border-white/10">
                  <thead>
                    <tr className="bg-white/10">
                      <th className="px-4 py-3 text-left text-xs font-medium text-teal-200 uppercase tracking-wider">–û–±—ä–µ–∫—Ç</th>
                      <th className="px-4 py-3 text-left text-xs font-medium text-teal-200 uppercase tracking-wider">–ü–µ—Ä–∏–æ–¥–∏—á–Ω–æ—Å—Ç—å</th>
                      <th className="px-4 py-3 text-left text-xs font-medium text-teal-200 uppercase tracking-wider">–ù–æ—Ä–º–∞—Ç–∏–≤–Ω—ã–π –¥–æ–∫—É–º–µ–Ω—Ç</th>
                    </tr>
                  </thead>
                  <tbody className="divide-y divide-white/10">
                    <tr className="hover:bg-white/5">
                      <td className="px-4 py-4 text-sm text-white">–≠–ª–µ–∫—Ç—Ä–æ—É—Å—Ç–∞–Ω–æ–≤–∫–∏ –¥–æ 1000 –í</td>
                      <td className="px-4 py-4 text-sm text-white">1 —Ä–∞–∑ –≤ 3 –≥–æ–¥–∞</td>
                      <td className="px-4 py-4 text-sm text-white">–ü–¢–≠–≠–ü</td>
                    </tr>
                    <tr className="hover:bg-white/5">
                      <td className="px-4 py-4 text-sm text-white">–≠–ª–µ–∫—Ç—Ä–æ—É—Å—Ç–∞–Ω–æ–≤–∫–∏ –≤—ã—à–µ 1000 –í</td>
                      <td className="px-4 py-4 text-sm text-white">1 —Ä–∞–∑ –≤ –≥–æ–¥</td>
                      <td className="px-4 py-4 text-sm text-white">–ü–¢–≠–≠–ü</td>
                    </tr>
                    <tr className="hover:bg-white/5">
                      <td className="px-4 py-4 text-sm text-white">–°—Ä–µ–¥—Å—Ç–≤–∞ –∑–∞—â–∏—Ç—ã</td>
                      <td className="px-4 py-4 text-sm text-white">1 —Ä–∞–∑ –≤ 6 –º–µ—Å—è—Ü–µ–≤</td>
                      <td className="px-4 py-4 text-sm text-white">–ú–µ–∂–æ—Ç—Ä–∞—Å–ª–µ–≤—ã–µ –ø—Ä–∞–≤–∏–ª–∞</td>
                    </tr>
                    <tr className="hover:bg-white/5">
                      <td className="px-4 py-4 text-sm text-white">–ü–µ—Ä–µ–¥–≤–∏–∂–Ω—ã–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏</td>
                      <td className="px-4 py-4 text-sm text-white">1 —Ä–∞–∑ –≤ –≥–æ–¥</td>
                      <td className="px-4 py-4 text-sm text-white">–ü–û–¢</td>
                    </tr>
                  </tbody>
                </table>
              </div>

              <h4>üîç –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–∏–∏:</h4>
              <ul>
                <li>–ê–∫–∫—Ä–µ–¥–∏—Ç–∞—Ü–∏—è –≤ –Ω–∞—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º–µ –∞–∫–∫—Ä–µ–¥–∏—Ç–∞—Ü–∏–∏</li>
                <li>–ü–æ–≤–µ—Ä–µ–Ω–Ω—ã–µ —Å—Ä–µ–¥—Å—Ç–≤–∞ –∏–∑–º–µ—Ä–µ–Ω–∏–π</li>
                <li>–ö–≤–∞–ª–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–µ—Ä—Å–æ–Ω–∞–ª —Å –∞—Ç—Ç–µ—Å—Ç–∞—Ü–∏–µ–π</li>
                <li>–°–æ–±–ª—é–¥–µ–Ω–∏–µ –º–µ—Ç–æ–¥–∏–∫ –∏–∑–º–µ—Ä–µ–Ω–∏–π</li>
                <li>–°–∏—Å—Ç–µ–º–∞ –º–µ–Ω–µ–¥–∂–º–µ–Ω—Ç–∞ –∫–∞—á–µ—Å—Ç–≤–∞</li>
              </ul>
            </div>
          </div>
        </PremiumCard>

        {/* –í–∞–∂–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
        <PremiumCard variant="default" className="mb-8 bg-yellow-500/10 border border-yellow-400/30">
          <div className="text-white">
            <h3 className="text-xl font-bold text-yellow-300 mb-3 flex items-center">
              <span className="mr-2 text-2xl">üí°</span> –í–∞–∂–Ω–æ –∑–Ω–∞—Ç—å:
            </h3>
            <p className="text-white leading-relaxed">
              –ü—Ä–æ—Ç–æ–∫–æ–ª—ã –∏–∑–º–µ—Ä–µ–Ω–∏–π –æ—Ç –Ω–µ–∞–∫–∫—Ä–µ–¥–∏—Ç–æ–≤–∞–Ω–Ω—ã—Ö –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–∏–π –Ω–µ –ø—Ä–∏–Ω–∏–º–∞—é—Ç—Å—è 
              –∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä—É—é—â–∏–º–∏ –æ—Ä–≥–∞–Ω–∞–º–∏. –¢–æ–ª—å–∫–æ –∞–∫–∫—Ä–µ–¥–∏—Ç–æ–≤–∞–Ω–Ω–∞—è —ç–ª–µ–∫—Ç—Ä–æ–ª–∞–±–æ—Ä–∞—Ç–æ—Ä–∏—è 
              –º–æ–∂–µ—Ç –≤—ã–¥–∞—Ç—å –ø—Ä–æ—Ç–æ–∫–æ–ª—ã, –∏–º–µ—é—â–∏–µ —é—Ä–∏–¥–∏—á–µ—Å–∫—É—é —Å–∏–ª—É.
            </p>
          </div>
        </PremiumCard>

        {/* –®—Ç—Ä–∞—Ñ—ã */}
        <PremiumCard variant="default" className="mb-8 bg-red-500/10 border border-red-400/30">
          <div className="text-white">
            <h3 className="text-xl font-bold text-red-300 mb-3 flex items-center">
              <span className="mr-2 text-2xl">üí∞</span> –®—Ç—Ä–∞—Ñ—ã –∑–∞ –Ω–∞—Ä—É—à–µ–Ω–∏—è:
            </h3>
            <ul className="text-white space-y-2">
              <li>‚Ä¢ –û—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –ø—Ä–æ—Ç–æ–∫–æ–ª–æ–≤ –∏–∑–º–µ—Ä–µ–Ω–∏–π: –¥–æ 200 000 —Ä—É–±.</li>
              <li>‚Ä¢ –ü—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—ã–µ –∏–∑–º–µ—Ä–µ–Ω–∏—è: –¥–æ 130 000 —Ä—É–±.</li>
              <li>‚Ä¢ –≠–∫—Å–ø–ª—É–∞—Ç–∞—Ü–∏—è –Ω–µ–∏—Å–ø—Ä–∞–≤–Ω–æ–≥–æ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è: –¥–æ 200 000 —Ä—É–±.</li>
              <li>‚Ä¢ –ü—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–∫–∞ –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏: –¥–æ 90 —Å—É—Ç–æ–∫</li>
            </ul>
          </div>
        </PremiumCard>

        {/* –ü—Ä–æ–¥–∞–∂–Ω—ã–π –∞—Ä–≥—É–º–µ–Ω—Ç */}
        <PremiumCard variant="default" className="mb-8 bg-emerald-500/10 border border-emerald-400/30">
          <div className="text-white">
            <h3 className="text-xl font-bold text-emerald-300 mb-3 flex items-center">
              <span className="mr-2 text-2xl">üí∞</span> –ü—Ä–æ–¥–∞–∂–Ω—ã–π –∞—Ä–≥—É–º–µ–Ω—Ç:
            </h3>
            <p className="text-white leading-relaxed italic">
              –ò–∑–º–µ—Ä–µ–Ω–∏—è —ç–ª–µ–∫—Ç—Ä–æ–ª–∞–±–æ—Ä–∞—Ç–æ—Ä–∏–∏ —Å—Ç–æ—è—Ç 15-50 —Ç—ã—Å—è—á —Ä—É–±–ª–µ–π —Ä–∞–∑ –≤ 1-3 –≥–æ–¥–∞ 
              –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –æ–±—ä–µ–∫—Ç–∞. –®—Ç—Ä–∞—Ñ –∑–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –ø—Ä–æ—Ç–æ–∫–æ–ª–æ–≤ ‚Äî 200 000 —Ä—É–±–ª–µ–π. 
              –ü—Ä–∏ –ø–æ–∂–∞—Ä–µ –∏–ª–∏ –Ω–µ—Å—á–∞—Å—Ç–Ω–æ–º —Å–ª—É—á–∞–µ –∏–∑-–∑–∞ –Ω–µ–∏—Å–ø—Ä–∞–≤–Ω–æ—Å—Ç–∏ —ç–ª–µ–∫—Ç—Ä–æ–æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è 
              –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å –Ω–µ—Å–µ—Ç —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—å –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏—è. –≠—Ç–æ –Ω–µ —Ä–∞—Å—Ö–æ–¥—ã, –∞ —Å—Ç—Ä–∞—Ö–æ–≤–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏.
            </p>
          </div>
        </PremiumCard>

        {/* –ù–∞–≤–∏–≥–∞—Ü–∏—è */}
        <div className="flex items-center justify-between">
          <RippleButton
            variant="outline"
            onClick={backToDashboard}
            className="text-teal-300 border-teal-300 hover:bg-teal-500/20"
          >
            ‚Üê –ù–∞–∑–∞–¥ –∫ –º–æ–¥—É–ª—è–º
          </RippleButton>

          <div className="flex space-x-4">
            <RippleButton
              variant="outline"
              onClick={prevSection}
              disabled={currentSection === 0}
              className="text-teal-300 border-teal-300 hover:bg-teal-500/20 disabled:opacity-50"
            >
              ‚Üê –ü—Ä–µ–¥—ã–¥—É—â–∏–π
            </RippleButton>

            <RippleButton
              variant="glow"
              onClick={nextSection}
              className="bg-teal-600 hover:bg-teal-500 text-white"
            >
              {currentSection === (moduleData.sections?.length - 1) ? '–ó–∞–≤–µ—Ä—à–∏—Ç—å –º–æ–¥—É–ª—å' : '–°–ª–µ–¥—É—é—â–∏–π ‚Üí'}
            </RippleButton>
          </div>
        </div>
      </div>
    </PremiumPage>
  )
}

export default Module11ElectricalLaboratory // ‚úÖ –ü–†–ê–í–ò–õ–¨–ù–´–ô —ç–∫—Å–ø–æ—Ä—Ç –¥–ª—è Electrical Laboratory