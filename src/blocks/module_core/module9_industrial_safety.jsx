import React, { useState, useEffect, useCallback } from 'react'
import { useNavigate, useParams } from 'react-router-dom'

// ‚úÖ –ü–†–ê–í–ò–õ–¨–ù–´–ï –∏–º–ø–æ—Ä—Ç—ã –ø—Ä–µ–º–∏–∞–ª—å–Ω—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
import { PremiumPage, PremiumCard, RippleButton, AnimatedProgress } from '../../components/premium/PremiumUI.jsx'
import { useSounds } from '../../components/premium/SoundSystem.jsx'

// ‚úÖ UI –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
import ProgressBar from '../../components/ProgressBar.jsx'
import BadgeMeter from '../../components/BadgeMeter.jsx'
import { notify } from '../../components/NotificationPanel.jsx'

// ‚úÖ API
import { contentApi } from '../../api/mockContentApi.js'
import { progressApi } from '../../api/mockProgressApi.js'

const Module9IndustrialSafety = () => { // ‚úÖ –ü–†–ê–í–ò–õ–¨–ù–û–ï –Ω–∞–∑–≤–∞–Ω–∏–µ –¥–ª—è Industrial Safety
  const navigate = useNavigate()
  const { moduleId } = useParams()
  const { sounds } = useSounds() // ‚úÖ –ó–≤—É–∫–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω—ã
  
  const [currentSection, setCurrentSection] = useState(0)
  const [completedSections, setCompletedSections] = useState([])
  const [readingTime, setReadingTime] = useState(0)
  const [isReading, setIsReading] = useState(false)
  const [moduleData, setModuleData] = useState(null)
  const [isLoading, setIsLoading] = useState(true)

  // –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –º–æ–¥—É–ª—è –∏–∑ API
  useEffect(() => {
    const fetchModuleContent = async () => {
      setIsLoading(true)
      try {
        const parsedModuleId = parseInt(moduleId) || 9
        if (isNaN(parsedModuleId)) {
          throw new Error('–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π ID –º–æ–¥—É–ª—è.')
        }
        const data = await contentApi.fetchModuleContent(parsedModuleId)
        setModuleData(data)
        
        // –ó–∞–≥—Ä—É–∂–∞–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        const userProgress = await progressApi.fetchUserProgress()
        if (userProgress.completedModules) {
          const moduleProgress = userProgress.moduleProgress?.[parsedModuleId] || {}
          setCompletedSections(moduleProgress.completedSections || [])
        }
        
        sounds.success()
      } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –º–æ–¥—É–ª—è:', error)
        notify.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏', error.message || '–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∫–æ–Ω—Ç–µ–Ω—Ç –º–æ–¥—É–ª—è.')
        sounds.error()
        navigate('/dashboard')
      } finally {
        setIsLoading(false)
      }
    }

    fetchModuleContent()
  }, [moduleId, navigate, sounds])

  // –¢–∞–π–º–µ—Ä —á—Ç–µ–Ω–∏—è
  useEffect(() => {
    if (isReading) {
      const timer = setInterval(() => {
        setReadingTime(prev => prev + 1)
      }, 1000)
      return () => clearInterval(timer)
    }
  }, [isReading])

  useEffect(() => {
    setIsReading(true)
    setReadingTime(0)
    return () => setIsReading(false)
  }, [currentSection])

  const nextSection = useCallback(() => {
    if (!moduleData) return
    if (currentSection < moduleData.sections.length - 1) {
      setCurrentSection(currentSection + 1)
      sounds.success()
    } else {
      completeModule()
    }
  }, [currentSection, moduleData, sounds])

  const prevSection = useCallback(() => {
    if (currentSection > 0) {
      setCurrentSection(currentSection - 1)
      sounds.click()
    }
  }, [currentSection, sounds])

  const completeModule = async () => {
    try {
      await progressApi.updateModuleProgress({
        moduleId: parseInt(moduleId) || 9,
        completedSections: completedSections
      })
      notify.success('–ú–æ–¥—É–ª—å –∑–∞–≤–µ—Ä—à–µ–Ω', '–ü—Ä–æ–º—ã—à–ª–µ–Ω–Ω–∞—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –∏–∑—É—á–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!')
      sounds.achievement()
      navigate(`/module/${moduleId}/quiz`)
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –º–æ–¥—É–ª—è:', error)
      notify.error('–û—à–∏–±–∫–∞', error.message || '–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≤–µ—Ä—à–∏—Ç—å –º–æ–¥—É–ª—å.')
      sounds.error()
    }
  }

  const backToDashboard = () => {
    sounds.click()
    navigate('/dashboard')
  }

  const formatTime = (seconds) => {
    const minutes = Math.floor(seconds / 60)
    const remainingSeconds = seconds % 60
    return `${minutes}:${remainingSeconds.toString().padStart(2, '0')}`
  }

  // –ó–∞–≥—Ä—É–∑–æ—á–Ω—ã–π —ç–∫—Ä–∞–Ω
  if (isLoading || !moduleData) {
    return (
      <PremiumPage background="matrix" className="min-h-screen flex items-center justify-center">
        <PremiumCard variant="glow" className="text-center">
          <div className="w-20 h-20 border-4 border-cyan-400 border-t-transparent rounded-full animate-spin mx-auto mb-6"></div>
          <h2 className="text-2xl font-bold text-white mb-2">–ó–∞–≥—Ä—É–∑–∫–∞ –º–æ–¥—É–ª—è...</h2>
          <p className="text-cyan-200">–ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –º–∞—Ç–µ—Ä–∏–∞–ª—ã –ø–æ –ø—Ä–æ–º—ã—à–ª–µ–Ω–Ω–æ–π –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏</p>
        </PremiumCard>
      </PremiumPage>
    )
  }

  const currentSectionData = moduleData.sections[currentSection]
  const progress = Math.round(((currentSection + 1) / moduleData.sections.length) * 100)

  return (
    <PremiumPage background="neural" className="min-h-screen">
      <div className="max-w-4xl mx-auto px-6 py-12">
        
        {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ –º–æ–¥—É–ª—è */}
        <PremiumCard variant="glow" className="mb-8 text-center">
          <div className="mb-6">
            <h1 className="text-4xl font-bold text-white mb-4">
              ‚ö° –ú–æ–¥—É–ª—å 9: –ü—Ä–æ–º—ã—à–ª–µ–Ω–Ω–∞—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å
            </h1>
            <p className="text-cyan-200 text-lg mb-4">
              –ê—Ç—Ç–µ—Å—Ç–∞—Ü–∏—è –ø–æ –ø—Ä–æ–º—ã—à–ª–µ–Ω–Ω–æ–π –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –†–æ—Å—Ç–µ—Ö–Ω–∞–¥–∑–æ—Ä–∞
            </p>
            
            {/* –ü—Ä–æ–≥—Ä–µ—Å—Å */}
            <div className="flex items-center justify-center space-x-4 mb-4">
              <span className="text-sm text-cyan-300">
                –†–∞–∑–¥–µ–ª {currentSection + 1} –∏–∑ {moduleData.sections?.length || 1}
              </span>
              <div className="flex-1 max-w-xs">
                <AnimatedProgress value={progress} />
              </div>
              <span className="text-sm text-cyan-300">
                {Math.round(progress)}%
              </span>
            </div>

            <div className="text-right text-white">
              <div className="text-sm text-cyan-200">–í—Ä–µ–º—è –∏–∑—É—á–µ–Ω–∏—è:</div>
              <div className="font-semibold">{formatTime(readingTime)}</div>
            </div>
          </div>
        </PremiumCard>

        {/* –ö–æ–Ω—Ç–µ–Ω—Ç –º–æ–¥—É–ª—è */}
        <PremiumCard variant="default" className="mb-8">
          <div className="text-white">
            <h2 className="text-2xl font-bold text-cyan-300 mb-6">
              {currentSectionData.title || '–û—Å–Ω–æ–≤—ã –ø—Ä–æ–º—ã—à–ª–µ–Ω–Ω–æ–π –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏'}
            </h2>
            
            <div className="prose prose-invert max-w-none text-white">
              <h3>üéØ –ß—Ç–æ —Ç–∞–∫–æ–µ –ø—Ä–æ–º—ã—à–ª–µ–Ω–Ω–∞—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å?</h3>
              <p>
                –ü—Ä–æ–º—ã—à–ª–µ–Ω–Ω–∞—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å ‚Äî —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞—â–∏—â–µ–Ω–Ω–æ—Å—Ç–∏ –∂–∏–∑–Ω–µ–Ω–Ω–æ –≤–∞–∂–Ω—ã—Ö –∏–Ω—Ç–µ—Ä–µ—Å–æ–≤ 
                –ª–∏—á–Ω–æ—Å—Ç–∏ –∏ –æ–±—â–µ—Å—Ç–≤–∞ –æ—Ç –∞–≤–∞—Ä–∏–π –Ω–∞ –æ–ø–∞—Å–Ω—ã—Ö –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–µ–Ω–Ω—ã—Ö –æ–±—ä–µ–∫—Ç–∞—Ö (–û–ü–û) 
                –∏ –ø–æ—Å–ª–µ–¥—Å—Ç–≤–∏–π —É–∫–∞–∑–∞–Ω–Ω—ã—Ö –∞–≤–∞—Ä–∏–π.
              </p>
              
              <h4>üìã –û–±–ª–∞—Å—Ç–∏ –∞—Ç—Ç–µ—Å—Ç–∞—Ü–∏–∏ –†–æ—Å—Ç–µ—Ö–Ω–∞–¥–∑–æ—Ä–∞:</h4>
              <div className="overflow-x-auto mb-6">
                <table className="min-w-full bg-white/5 rounded-lg overflow-hidden border border-white/10">
                  <thead>
                    <tr className="bg-white/10">
                      <th className="px-4 py-3 text-left text-xs font-medium text-cyan-200 uppercase tracking-wider">–ò–Ω–¥–µ–∫—Å</th>
                      <th className="px-4 py-3 text-left text-xs font-medium text-cyan-200 uppercase tracking-wider">–û–±–ª–∞—Å—Ç—å –∞—Ç—Ç–µ—Å—Ç–∞—Ü–∏–∏</th>
                      <th className="px-4 py-3 text-left text-xs font-medium text-cyan-200 uppercase tracking-wider">–î–ª—è –∫–æ–≥–æ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–∞</th>
                    </tr>
                  </thead>
                  <tbody className="divide-y divide-white/10">
                    <tr className="hover:bg-white/5">
                      <td className="px-4 py-4 text-sm text-white font-semibold">–ê.1</td>
                      <td className="px-4 py-4 text-sm text-white">–û–±—â–∏–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –ø—Ä–æ–º—ã—à–ª–µ–Ω–Ω–æ–π –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏</td>
                      <td className="px-4 py-4 text-sm text-white">–û–±—è–∑–∞—Ç–µ–ª—å–Ω–∞ –¥–ª—è –≤—Å–µ—Ö</td>
                    </tr>
                    <tr className="hover:bg-white/5">
                      <td className="px-4 py-4 text-sm text-white font-semibold">–ë.8</td>
                      <td className="px-4 py-4 text-sm text-white">–û–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ, —Ä–∞–±–æ—Ç–∞—é—â–µ–µ –ø–æ–¥ –¥–∞–≤–ª–µ–Ω–∏–µ–º</td>
                      <td className="px-4 py-4 text-sm text-white">–ö–æ—Ç–ª—ã, —Å–æ—Å—É–¥—ã, —Ç—Ä—É–±–æ–ø—Ä–æ–≤–æ–¥—ã</td>
                    </tr>
                    <tr className="hover:bg-white/5">
                      <td className="px-4 py-4 text-sm text-white font-semibold">–ë.9</td>
                      <td className="px-4 py-4 text-sm text-white">–ü–æ–¥—ä–µ–º–Ω—ã–µ —Å–æ–æ—Ä—É–∂–µ–Ω–∏—è</td>
                      <td className="px-4 py-4 text-sm text-white">–ö—Ä–∞–Ω—ã, –ª–∏—Ñ—Ç—ã, –ø–æ–¥—ä–µ–º–Ω–∏–∫–∏</td>
                    </tr>
                    <tr className="hover:bg-white/5">
                      <td className="px-4 py-4 text-sm text-white font-semibold">–ë.7</td>
                      <td className="px-4 py-4 text-sm text-white">–ì–∞–∑–æ—Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∏ –≥–∞–∑–æ–ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–µ</td>
                      <td className="px-4 py-4 text-sm text-white">–ì–∞–∑–æ–≤—ã–µ —Å–µ—Ç–∏, –∫–æ—Ç–µ–ª—å–Ω—ã–µ</td>
                    </tr>
                  </tbody>
                </table>
              </div>

              <h4>‚ö†Ô∏è –ö—Ç–æ –ø–æ–¥–ª–µ–∂–∏—Ç –∞—Ç—Ç–µ—Å—Ç–∞—Ü–∏–∏:</h4>
              <ul>
                <li>–†—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª–∏ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–π, —ç–∫—Å–ø–ª—É–∞—Ç–∏—Ä—É—é—â–∏—Ö –û–ü–û</li>
                <li>–ó–∞–º–µ—Å—Ç–∏—Ç–µ–ª–∏ —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª–µ–π –ø–æ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤—É</li>
                <li>–ì–ª–∞–≤–Ω—ã–µ –∏–Ω–∂–µ–Ω–µ—Ä—ã –∏ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∞</li>
                <li>–ù–∞—á–∞–ª—å–Ω–∏–∫–∏ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–µ–Ω–Ω—ã—Ö –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–π</li>
                <li>–°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—ã —Å–ª—É–∂–± –ø–æ –Ω–∞–¥–∑–æ—Ä—É –∑–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ–π —ç–∫—Å–ø–ª—É–∞—Ç–∞—Ü–∏–µ–π –û–ü–û</li>
              </ul>

              <h4>üìÖ –°—Ä–æ–∫–∏ –∞—Ç—Ç–µ—Å—Ç–∞—Ü–∏–∏:</h4>
              <ul>
                <li>–ü–µ—Ä–∏–æ–¥–∏—á–Ω–æ—Å—Ç—å: –∫–∞–∂–¥—ã–µ 5 –ª–µ—Ç</li>
                <li>–í–Ω–µ–æ—á–µ—Ä–µ–¥–Ω–∞—è: –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –Ω–æ—Ä–º–∞—Ç–∏–≤–Ω—ã—Ö —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π</li>
                <li>–ü–æ—Å–ª–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è –Ω–∞ –¥–æ–ª–∂–Ω–æ—Å—Ç—å: –≤ —Ç–µ—á–µ–Ω–∏–µ 1 –º–µ—Å—è—Ü–∞</li>
                <li>–î–µ–π—Å—Ç–≤–∏–µ —É–¥–æ—Å—Ç–æ–≤–µ—Ä–µ–Ω–∏—è: –¥–æ —É–∫–∞–∑–∞–Ω–Ω–æ–π –¥–∞—Ç—ã</li>
              </ul>
            </div>
          </div>
        </PremiumCard>

        {/* –í–∞–∂–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
        <PremiumCard variant="default" className="mb-8 bg-red-500/10 border border-red-400/30">
          <div className="text-white">
            <h3 className="text-xl font-bold text-red-300 mb-3 flex items-center">
              <span className="mr-2 text-2xl">‚ö†Ô∏è</span> –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏ –≤–∞–∂–Ω–æ:
            </h3>
            <p className="text-white leading-relaxed">
              –ù–∞ –ª—é–±—ã–µ —É–∑–∫–∏–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —Å–Ω–∞—á–∞–ª–∞ –∞—Ç—Ç–µ—Å—Ç–æ–≤–∞—Ç—å—Å—è –ø–æ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—é 
              "–ê1 ‚Äì –æ–±—â–∏–µ –ø—Ä–∞–≤–∏–ª–∞". –ë–µ–∑ –¥–µ–π—Å—Ç–≤—É—é—â–µ–π –∞—Ç—Ç–µ—Å—Ç–∞—Ü–∏–∏ –Ω–∞ "–æ–±—â–∏–µ –ø—Ä–∞–≤–∏–ª–∞" 
              –¥—Ä—É–≥–∏–µ –∞—Ç—Ç–µ—Å—Ç–∞—Ü–∏–∏ –ø–æ –ø—Ä–æ–º—ã—à–ª–µ–Ω–Ω–æ–π –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –±—É–¥—É—Ç –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã.
            </p>
          </div>
        </PremiumCard>

        {/* –®—Ç—Ä–∞—Ñ—ã */}
        <PremiumCard variant="default" className="mb-8 bg-yellow-500/10 border border-yellow-400/30">
          <div className="text-white">
            <h3 className="text-xl font-bold text-yellow-300 mb-3 flex items-center">
              <span className="mr-2 text-2xl">üí∞</span> –®—Ç—Ä–∞—Ñ—ã –∑–∞ –Ω–∞—Ä—É—à–µ–Ω–∏—è:
            </h3>
            <ul className="text-white space-y-2">
              <li>‚Ä¢ –û—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –∞—Ç—Ç–µ—Å—Ç–∞—Ü–∏–∏: 200 000 - 400 000 —Ä—É–±.</li>
              <li>‚Ä¢ –î–æ–ø—É—Å–∫ –Ω–µ–∞—Ç—Ç–µ—Å—Ç–æ–≤–∞–Ω–Ω–æ–≥–æ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞: 400 000 —Ä—É–±.</li>
              <li>‚Ä¢ –ü—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–∫–∞ –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏: –¥–æ 90 —Å—É—Ç–æ–∫</li>
              <li>‚Ä¢ –ü—Ä–∏ –∞–≤–∞—Ä–∏–∏: —É–≥–æ–ª–æ–≤–Ω–∞—è –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—è</li>
            </ul>
          </div>
        </PremiumCard>

        {/* –ü—Ä–æ–¥–∞–∂–Ω—ã–π –∞—Ä–≥—É–º–µ–Ω—Ç */}
        <PremiumCard variant="default" className="mb-8 bg-emerald-500/10 border border-emerald-400/30">
          <div className="text-white">
            <h3 className="text-xl font-bold text-emerald-300 mb-3 flex items-center">
              <span className="mr-2 text-2xl">üí∞</span> –ü—Ä–æ–¥–∞–∂–Ω—ã–π –∞—Ä–≥—É–º–µ–Ω—Ç:
            </h3>
            <p className="text-white leading-relaxed italic">
              –ê—Ç—Ç–µ—Å—Ç–∞—Ü–∏—è –ø–æ –ø—Ä–æ–º—ã—à–ª–µ–Ω–Ω–æ–π –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ —Å—Ç–æ–∏—Ç 10-15 —Ç—ã—Å—è—á —Ä—É–±–ª–µ–π –Ω–∞ 5 –ª–µ—Ç. 
              –®—Ç—Ä–∞—Ñ –∑–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –∞—Ç—Ç–µ—Å—Ç–∞—Ü–∏–∏ ‚Äî 400 000 —Ä—É–±–ª–µ–π. –û–¥–Ω–∞ –∞–≤–∞—Ä–∏—è –Ω–∞ –û–ü–û 
              –º–æ–∂–µ—Ç –ø—Ä–∏–≤–µ—Å—Ç–∏ –∫ –º–Ω–æ–≥–æ–º–∏–ª–ª–∏–æ–Ω–Ω—ã–º —É–±—ã—Ç–∫–∞–º –∏ —É–≥–æ–ª–æ–≤–Ω–æ–π –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏. 
              –ü–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–µ –†–æ—Å—Ç–µ—Ö–Ω–∞–¥–∑–æ—Ä–∞, –±–æ–ª–µ–µ 70% –∞–≤–∞—Ä–∏–π –ø—Ä–æ–∏—Å—Ö–æ–¥—è—Ç –∏–∑-–∑–∞ —á–µ–ª–æ–≤–µ—á–µ—Å–∫–æ–≥–æ —Ñ–∞–∫—Ç–æ—Ä–∞.
            </p>
          </div>
        </PremiumCard>

        {/* –ù–∞–≤–∏–≥–∞—Ü–∏—è */}
        <div className="flex items-center justify-between">
          <RippleButton
            variant="outline"
            onClick={backToDashboard}
            className="text-cyan-300 border-cyan-300 hover:bg-cyan-500/20"
          >
            ‚Üê –ù–∞–∑–∞–¥ –∫ –º–æ–¥—É–ª—è–º
          </RippleButton>

          <div className="flex space-x-4">
            <RippleButton
              variant="outline"
              onClick={prevSection}
              disabled={currentSection === 0}
              className="text-cyan-300 border-cyan-300 hover:bg-cyan-500/20 disabled:opacity-50"
            >
              ‚Üê –ü—Ä–µ–¥—ã–¥—É—â–∏–π
            </RippleButton>

            <RippleButton
              variant="glow"
              onClick={nextSection}
              className="bg-cyan-600 hover:bg-cyan-500 text-white"
            >
              {currentSection === (moduleData.sections?.length - 1) ? '–ó–∞–≤–µ—Ä—à–∏—Ç—å –º–æ–¥—É–ª—å' : '–°–ª–µ–¥—É—é—â–∏–π ‚Üí'}
            </RippleButton>
          </div>
        </div>
      </div>
    </PremiumPage>
  )
}

export default Module9IndustrialSafety // ‚úÖ –ü–†–ê–í–ò–õ–¨–ù–´–ô —ç–∫—Å–ø–æ—Ä—Ç –¥–ª—è Industrial Safety